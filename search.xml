<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DDS漏洞整理</title>
      <link href="/2024/02/21/DDS%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/"/>
      <url>/2024/02/21/DDS%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>近期工作项目中涉及到DDS协议，和导师一起整理Fast DDS和OpenDDS的相关漏洞，用于后续学习和工作。</p></blockquote><p><strong>漏洞来源：</strong></p><p><a href="https://github.com/eProsima/Fast-DDS/security">https://github.com/eProsima/Fast-DDS/security</a></p><p><a href="https://github.com/OpenDDS/OpenDDS/security">https://github.com/OpenDDS/OpenDDS/security</a></p><table><thead><tr><th align="center">漏洞编号</th><th>漏洞名称</th><th align="left">漏洞类型</th><th align="center">所属模块</th></tr></thead><tbody><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-fcr6-x23w-94wp">CVE-2023-39534</a></td><td>GAP子消息格式错误触发断言失败</td><td align="left">拒绝服务</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-2rq6-8j7x-frr9">CVE-2023-39945</a></td><td>序列化数据中的子消息格式错误导致未处理的异常</td><td align="left">拒绝服务</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-j297-rg6j-m7hx">CVE-2023-39946</a></td><td>CDR消息导致push_back_helper堆溢出</td><td align="left">堆溢出</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-mf55-5747-c4pv">CVE-2023-39947</a></td><td>CDR消息导致push_back_helper堆溢出</td><td align="left">堆溢出</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-gq8g-fj58-22gm">CVE-2023-42459</a></td><td>DATA子消息格式错误导致bad-free错误</td><td align="left">Double Free&#x2F;UAF</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-3jv9-j9x3-95cg">CVE-2023-39949</a></td><td>序列号验证不当导致远程触发断言失败</td><td align="left">拒绝服务</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-x9pj-vrgf-f68f">CVE-2023-39948</a></td><td>未捕获fastcdr异常导致fastdds崩溃</td><td align="left">拒绝服务</td><td align="center">Fast DDS</td></tr><tr><td align="center"><a href="https://github.com/eProsima/Fast-DDS/security/advisories/GHSA-v5r6-8mvh-cp98">CVE-2023-50257</a></td><td>SROS2中的RTPS数据包可强制断开正常连接</td><td align="left">拒绝服务</td><td align="center">Fast DDS</td></tr><tr><td align="center"></td><td></td><td align="left"></td><td align="center">OpenDDS</td></tr></tbody></table><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><h2 id="GAP子消息格式错误触发断言失败"><a href="#GAP子消息格式错误触发断言失败" class="headerlink" title="GAP子消息格式错误触发断言失败"></a>GAP子消息格式错误触发断言失败</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>格式错误的 GAP 子消息可能会触发断言失败，从而导致 FastDDS 崩溃。</p><h3 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><h2 id="Malformed-GAP-submessage-triggers-assertion-failure"><a href="#Malformed-GAP-submessage-triggers-assertion-failure" class="headerlink" title="Malformed GAP submessage triggers assertion failure"></a>Malformed GAP submessage triggers assertion failure</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><h3 id="漏洞详情-1"><a href="#漏洞详情-1" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><h3 id="修复方案-1"><a href="#修复方案-1" class="headerlink" title="修复方案"></a>修复方案</h3>]]></content>
      
      
      <categories>
          
          <category> 漏洞整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fast DDS </tag>
            
            <tag> 漏洞整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeRTOS漏洞整理</title>
      <link href="/2024/02/19/FreeRTOS%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/"/>
      <url>/2024/02/19/FreeRTOS%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>近期工作项目中涉及到FreeRTOS系统，和导师一起整理FreeRTOS的相关漏洞，用于后续学习和工作。</p></blockquote><p><strong>漏洞来源：<a href="https://www.freertos.org/security/security_updates.html">FreeRTOS Security Updates</a></strong></p><table><thead><tr><th align="center">漏洞编号</th><th align="left">漏洞名称</th><th align="center">漏洞类型</th><th align="left">所属模块</th></tr></thead><tbody><tr><td align="center">&#x2F;</td><td align="left">TCP&#x2F;IP 堆栈网络缓冲区分配存在整数溢出</td><td align="center">整数溢出</td><td align="left">FreeRTOS-Plus-TCP</td></tr><tr><td align="center"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-43997">CVE-2021-43997</a></td><td align="left">ARMv7-M 和 ARMv8-M MPU 的移植版本存在权限提升</td><td align="center">权限提升</td><td align="left">FreeRTOS Kernel</td></tr><tr><td align="center"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32020">CVE-2021-32020</a></td><td align="left">堆中动态内存分配存在整数溢出</td><td align="center">整数溢出</td><td align="left">FreeRTOS Kernel</td></tr><tr><td align="center"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31571">CVE-2021-31571</a></td><td align="left">队列创建过程中内存分配存在整数溢出</td><td align="center">整数溢出</td><td align="left">FreeRTOS Kernel</td></tr><tr><td align="center"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31572">CVE-2021-31572</a></td><td align="left">流缓冲区创建过程中内存分配存在整数溢出</td><td align="center">整数溢出</td><td align="left">FreeRTOS Kernel</td></tr></tbody></table><h2 id="TCP-IP-堆栈网络缓冲区分配存在整数溢出"><a href="#TCP-IP-堆栈网络缓冲区分配存在整数溢出" class="headerlink" title="TCP&#x2F;IP 堆栈网络缓冲区分配存在整数溢出"></a>TCP&#x2F;IP 堆栈网络缓冲区分配存在整数溢出</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><strong>09&#x2F;10&#x2F;2021 - FreeRTOS-Plus-TCP V2.3.3 and earlier</strong></p><ul><li>In <a href="https://github.com/FreeRTOS/FreeRTOS-Plus-TCP/blob/main/source/portable/BufferManagement/BufferAllocation_2.c">BufferAllocation_2.c</a>, there is an unchecked possible addition overflow when calculating the size of the block of memory to be allocated for a network buffer that could result in the size overflowing and the allocation returning success but allocating only a fraction of the memory asked for. With default settings, this would only occur when attempting to allocate within 12 bytes of 4 GB.</li></ul><p>在FreeRTOS-Plus-TCP TCP&#x2F;IP 堆栈网络缓冲区分配方案<a href="https://github.com/FreeRTOS/FreeRTOS-Plus-TCP/blob/main/source/portable/BufferManagement/BufferAllocation_2.c">BufferAllocation_2.c</a>中，计算要分配给网络缓冲区的内存块的大小时， 未对加法操作进行检查，导致出现整数上溢（整数下溢一般出现在减法操作中），分配的网络缓冲区大小远小于请求分配的大小，后续将进一步造成缓冲区溢出。</p><h3 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> * <span class="title function_">pucGetNetworkBuffer</span><span class="params">( <span class="type">size_t</span> * pxRequestedSizeBytes )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> * pucEthernetBuffer;</span><br><span class="line">    <span class="type">size_t</span> xSize = *pxRequestedSizeBytes;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// xSize要大于最小值</span></span><br><span class="line">    <span class="keyword">if</span>( xSize &lt; baMINIMAL_BUFFER_SIZE )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Buffers must be at least large enough to hold a TCP-packet with</span></span><br><span class="line"><span class="comment">         * headers, or an ARP packet, in case TCP is not included. */</span></span><br><span class="line">        xSize = baMINIMAL_BUFFER_SIZE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Round up xSize to the nearest multiple of N bytes,</span></span><br><span class="line"><span class="comment">     * where N equals &#x27;sizeof( size_t )&#x27;. */</span></span><br><span class="line">    <span class="comment">// 检查是否对齐</span></span><br><span class="line">    <span class="keyword">if</span>( ( xSize &amp; ( <span class="keyword">sizeof</span>( <span class="type">size_t</span> ) - <span class="number">1U</span> ) ) != <span class="number">0U</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 对齐过程存在整数上溢</span></span><br><span class="line">        xSize = ( xSize | ( <span class="keyword">sizeof</span>( <span class="type">size_t</span> ) - <span class="number">1U</span> ) ) + <span class="number">1U</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *pxRequestedSizeBytes = xSize;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Allocate a buffer large enough to store the requested Ethernet frame size</span></span><br><span class="line"><span class="comment">     * and a pointer to a network buffer structure (hence the addition of</span></span><br><span class="line"><span class="comment">     * ipBUFFER_PADDING bytes). */</span></span><br><span class="line">    pucEthernetBuffer = ( <span class="type">uint8_t</span> * ) pvPortMalloc( xSize + ipBUFFER_PADDING );</span><br><span class="line">    configASSERT( pucEthernetBuffer != <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( pucEthernetBuffer != <span class="literal">NULL</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Enough space is left at the start of the buffer to place a pointer to</span></span><br><span class="line"><span class="comment">         * the network buffer structure that references this Ethernet buffer.</span></span><br><span class="line"><span class="comment">         * Return a pointer to the start of the Ethernet buffer itself. */</span></span><br><span class="line">        pucEthernetBuffer += ipBUFFER_PADDING;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pucEthernetBuffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在pucGetNetworkBuffer()函数中，首先会检查xSize是否对齐：( xSize &amp; ( sizeof( size_t ) - 1U ) ) !&#x3D; 0U，如果没有对齐，则执行对齐操作：xSize &#x3D; ( xSize | ( sizeof( size_t ) - 1U ) ) + 1U。问题就出在进行对齐的代码中，如果xSize的值和size_t所能表示的最大值非常接近，进行对齐之后xSize就等于size_t所能表示的最大值，然后再+1，就会造成整数上溢，导致最后xSize的值为0，远小于请求的内存大小，这里需要对xSize的值进行检查。例如：sizeof( size_t )&#x3D;8，size_t所能表示的最大值为255，如果请求分配的内存大小为250，xSize | ( sizeof( size_t ) - 1U对齐之后大小为255，再+1结果为0。</p><p>最后pvPortMalloc( xSize + ipBUFFER_PADDING )函数申请到的内存块小于请求的* pxRequestedSizeBytes，会导致后续使用缓冲区pucEthernetBuffer时产生缓冲区溢出。其中xSize + ipBUFFER_PADDING也可能存在整数溢出。</p><p>在pxGetNetworkBufferWithDescriptor()函数和pxResizeNetworkBufferWithDescriptor()函数中同样存在此漏洞。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">NetworkBufferDescriptor_t * <span class="title function_">pxGetNetworkBufferWithDescriptor</span><span class="params">( <span class="type">size_t</span> xRequestedSizeBytes,</span></span><br><span class="line"><span class="params">                                                              TickType_t xBlockTimeTicks )</span></span><br><span class="line">&#123;</span><br><span class="line">    NetworkBufferDescriptor_t * pxReturn = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">size_t</span> uxCount;</span><br><span class="line"></span><br><span class="line">    ···</span><br><span class="line">            <span class="keyword">if</span>( xRequestedSizeBytes &gt; <span class="number">0U</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( ( xRequestedSizeBytes &lt; ( <span class="type">size_t</span> ) baMINIMAL_BUFFER_SIZE ) )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* ARP packets can replace application packets, so the storage must be</span></span><br><span class="line"><span class="comment">                     * at least large enough to hold an ARP. */</span></span><br><span class="line">                    xRequestedSizeBytes = baMINIMAL_BUFFER_SIZE;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/* Add 2 bytes to xRequestedSizeBytes and round up xRequestedSizeBytes</span></span><br><span class="line"><span class="comment">                 * to the nearest multiple of N bytes, where N equals &#x27;sizeof( size_t )&#x27;. */</span></span><br><span class="line">                xRequestedSizeBytes += <span class="number">2U</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>( ( xRequestedSizeBytes &amp; ( <span class="keyword">sizeof</span>( <span class="type">size_t</span> ) - <span class="number">1U</span> ) ) != <span class="number">0U</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 对齐过程存在整数上溢</span></span><br><span class="line">                    xRequestedSizeBytes = ( xRequestedSizeBytes | ( <span class="keyword">sizeof</span>( <span class="type">size_t</span> ) - <span class="number">1U</span> ) ) + <span class="number">1U</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/* Extra space is obtained so a pointer to the network buffer can</span></span><br><span class="line"><span class="comment">                 * be stored at the beginning of the buffer. */</span></span><br><span class="line">                pxReturn-&gt;pucEthernetBuffer = ( <span class="type">uint8_t</span> * ) pvPortMalloc( xRequestedSizeBytes + ipBUFFER_PADDING );</span><br><span class="line">                ···</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">NetworkBufferDescriptor_t * <span class="title function_">pxResizeNetworkBufferWithDescriptor</span><span class="params">( NetworkBufferDescriptor_t * pxNetworkBuffer,</span></span><br><span class="line"><span class="params">                                                                 <span class="type">size_t</span> xNewSizeBytes )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">size_t</span> xOriginalLength;</span><br><span class="line">    <span class="type">uint8_t</span> * pucBuffer;</span><br><span class="line"></span><br><span class="line">    xOriginalLength = pxNetworkBuffer-&gt;xDataLength + ipBUFFER_PADDING;</span><br><span class="line">    xNewSizeBytes = xNewSizeBytes + ipBUFFER_PADDING;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用pucGetNetworkBuffer()</span></span><br><span class="line">    pucBuffer = pucGetNetworkBuffer( &amp;( xNewSizeBytes ) );</span><br><span class="line">    ···</span><br></pre></td></tr></table></figure><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><p><a href="https://github.com/FreeRTOS/FreeRTOS-Plus-TCP/compare/V2.3.4...main?diff=split&w=#diff-5f070408ed1e32bbb621dc0fd89c3dcc84fa75e279eb5165539d413d6cd12d87R236">https://github.com/FreeRTOS/FreeRTOS-Plus-TCP/compare/V2.3.4...main?diff=split&amp;w=#diff-5f070408ed1e32bbb621dc0fd89c3dcc84fa75e279eb5165539d413d6cd12d87R236</a></p><p><img src="/2024/02/19/FreeRTOS%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/image-20240219181942705.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> baALIGNMENT_BYTES            ( sizeof( size_t ) )</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> baALIGNMENT_MASK             ( baALIGNMENT_BYTES - 1U )</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> baADD_WILL_OVERFLOW( a, b )    ( ( a ) &gt; ( SIZE_MAX - ( b ) ) )</span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> * <span class="title function_">pucGetNetworkBuffer</span><span class="params">( <span class="type">size_t</span> * pxRequestedSizeBytes )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> * pucEthernetBuffer = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">size_t</span> uxMaxAllowedBytes = ( SIZE_MAX &gt;&gt; <span class="number">1</span> );</span><br><span class="line">    <span class="type">size_t</span> xSize = *pxRequestedSizeBytes;</span><br><span class="line">    <span class="type">size_t</span> xBytesRequiredForAlignment, xAllocatedBytes;</span><br><span class="line">    BaseType_t xIntegerOverflowed = pdFALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( xSize &lt; baMINIMAL_BUFFER_SIZE )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Buffers must be at least large enough to hold a TCP-packet with</span></span><br><span class="line"><span class="comment">         * headers, or an ARP packet, in case TCP is not included. */</span></span><br><span class="line">        xSize = baMINIMAL_BUFFER_SIZE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Round up xSize to the nearest multiple of N bytes,</span></span><br><span class="line"><span class="comment">     * where N equals &#x27;sizeof( size_t )&#x27;. */</span></span><br><span class="line">    <span class="keyword">if</span>( ( xSize &amp; baALIGNMENT_MASK ) != <span class="number">0U</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// xBytesRequiredForAlignment表示对齐需要补齐的字节数</span></span><br><span class="line">        xBytesRequiredForAlignment = baALIGNMENT_BYTES - ( xSize &amp; baALIGNMENT_MASK );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// baADD_WILL_OVERFLOW检查对齐之后是否会溢出</span></span><br><span class="line">        <span class="keyword">if</span>( baADD_WILL_OVERFLOW( xSize, xBytesRequiredForAlignment ) == pdFAIL )</span><br><span class="line">        &#123;</span><br><span class="line">            xSize += xBytesRequiredForAlignment;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            xIntegerOverflowed = pdTRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// baADD_WILL_OVERFLOW检查添加padding之后是否会溢出</span></span><br><span class="line">    <span class="keyword">if</span>( baADD_WILL_OVERFLOW( xSize, ipBUFFER_PADDING ) == pdFAIL )</span><br><span class="line">    &#123;</span><br><span class="line">        xAllocatedBytes = xSize + ipBUFFER_PADDING;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        xIntegerOverflowed = pdTRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 未产生溢出才分配内存</span></span><br><span class="line">    <span class="keyword">if</span>( ( xIntegerOverflowed == pdFALSE ) &amp;&amp; ( xAllocatedBytes &lt;= uxMaxAllowedBytes ) )</span><br><span class="line">    &#123;</span><br><span class="line">        *pxRequestedSizeBytes = xSize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Allocate a buffer large enough to store the requested Ethernet frame size</span></span><br><span class="line"><span class="comment">         * and a pointer to a network buffer structure (hence the addition of</span></span><br><span class="line"><span class="comment">         * ipBUFFER_PADDING bytes). */</span></span><br><span class="line">        pucEthernetBuffer = ( <span class="type">uint8_t</span> * ) pvPortMalloc( xAllocatedBytes );</span><br><span class="line">        configASSERT( pucEthernetBuffer != <span class="literal">NULL</span> );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( pucEthernetBuffer != <span class="literal">NULL</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* Enough space is left at the start of the buffer to place a pointer to</span></span><br><span class="line"><span class="comment">             * the network buffer structure that references this Ethernet buffer.</span></span><br><span class="line"><span class="comment">             * Return a pointer to the start of the Ethernet buffer itself. */</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* MISRA Ref 18.4.1 [Usage of +, -, += and -= operators on expression of pointer type]. */</span></span><br><span class="line">            <span class="comment">/* More details at: https://github.com/FreeRTOS/FreeRTOS-Plus-TCP/blob/main/MISRA.md#rule-184. */</span></span><br><span class="line">            <span class="comment">/* coverity[misra_c_2012_rule_18_4_violation] */</span></span><br><span class="line">            pucEthernetBuffer += ipBUFFER_PADDING;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pucEthernetBuffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ARMv7-M-和-ARMv8-M-MPU-的移植版本存在权限提升"><a href="#ARMv7-M-和-ARMv8-M-MPU-的移植版本存在权限提升" class="headerlink" title="ARMv7-M 和 ARMv8-M MPU 的移植版本存在权限提升"></a>ARMv7-M 和 ARMv8-M MPU 的移植版本存在权限提升</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><strong>11&#x2F;12&#x2F;2021 - FreeRTOS Kernel versions 10.2.0 to 10.4.5 (inclusive)</strong></p><ul><li>ARMv7-M and ARMv8-M MPU ports: It is possible for an unprivileged task to raise its privilege by calling the internal function <code>xPortRaisePrivilege</code>.</li></ul><p>The public CVE record for this can be found at MITRE: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-43997">CVE-2021-43997</a>.</p><p>在针对 ARMv7-M 和 ARMv8-M MPU 的移植版本中，非特权任务可以通过调用内部函数xPortRaisePrivilege()提升其特权。</p><h3 id="漏洞详情-1"><a href="#漏洞详情-1" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><p><em><strong>&#x2F;portable&#x2F;Common&#x2F;mpu_wrappers.c</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Calls the port specific code to raise the privilege.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return pdFALSE if privilege was raised, pdTRUE otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">BaseType_t <span class="title function_">xPortRaisePrivilege</span><span class="params">( <span class="type">void</span> )</span> FREERTOS_SYSTEM_CALL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief If xRunningPrivileged is not pdTRUE, calls the port specific</span></span><br><span class="line"><span class="comment"> * code to reset the privilege, otherwise does nothing.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vPortResetPrivilege</span><span class="params">( BaseType_t xRunningPrivileged )</span>;</span><br><span class="line"><span class="comment">/*-----------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">BaseType_t <span class="title function_">xPortRaisePrivilege</span><span class="params">( <span class="type">void</span> )</span> <span class="comment">/* FREERTOS_SYSTEM_CALL */</span></span><br><span class="line">&#123;</span><br><span class="line">    BaseType_t xRunningPrivileged;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Check whether the processor is already privileged. */</span></span><br><span class="line">    xRunningPrivileged = portIS_PRIVILEGED();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If the processor is not already privileged, raise privilege. */</span></span><br><span class="line">    <span class="keyword">if</span>( xRunningPrivileged == pdFALSE )</span><br><span class="line">    &#123;</span><br><span class="line">        portRAISE_PRIVILEGE();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> xRunningPrivileged;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*-----------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vPortResetPrivilege</span><span class="params">( BaseType_t xRunningPrivileged )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>( xRunningPrivileged == pdFALSE )</span><br><span class="line">    &#123;</span><br><span class="line">        portRESET_PRIVILEGE();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在mpu_wrappers.c中，xPortRaisePrivilege()和vPortResetPrivilege()都被定义为函数，可以链接到xPortRaisePrivilege()和vPortResetPrivilege()函数标识符的代码都可以调用它们，这意味着非内核代码（如果不恰当地实现）有可能调用xPortRaisePrivilege()和vPortResetPrivilege()函数提升权限。</p><h3 id="修复方案-1"><a href="#修复方案-1" class="headerlink" title="修复方案"></a>修复方案</h3><p><a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/7a3848753b303cffe658abc11110d008669f7021">https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/7a3848753b303cffe658abc11110d008669f7021</a></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/include/mpu_wrappers.h b/include/mpu_wrappers.h</span></span><br><span class="line"><span class="comment">index 7f07d0001e..c44184d729 100644</span></span><br><span class="line"><span class="comment">--- a/include/mpu_wrappers.h</span></span><br><span class="line"><span class="comment">+++ b/include/mpu_wrappers.h</span></span><br><span class="line"><span class="meta">@@ -168,11 +168,41 @@</span></span><br><span class="line"> </span><br><span class="line">     #else /* MPU_WRAPPERS_INCLUDED_FROM_API_FILE */</span><br><span class="line"> </span><br><span class="line"><span class="deletion">-/* Ensure API functions go in the privileged execution section. */</span></span><br><span class="line"><span class="addition">+        /* Ensure API functions go in the privileged execution section. */</span></span><br><span class="line">         #define PRIVILEGED_FUNCTION     __attribute__( ( section( &quot;privileged_functions&quot; ) ) )</span><br><span class="line">         #define PRIVILEGED_DATA         __attribute__( ( section( &quot;privileged_data&quot; ) ) )</span><br><span class="line">         #define FREERTOS_SYSTEM_CALL    __attribute__( ( section( &quot;freertos_system_calls&quot; ) ) )</span><br><span class="line"> </span><br><span class="line"><span class="addition">+        /**</span></span><br><span class="line"><span class="addition">+         * @brief Calls the port specific code to raise the privilege.</span></span><br><span class="line"><span class="addition">+         *</span></span><br><span class="line"><span class="addition">+         * Sets xRunningPrivileged to pdFALSE if privilege was raised, else sets</span></span><br><span class="line"><span class="addition">+         * it to pdTRUE.</span></span><br><span class="line"><span class="addition">+         */</span></span><br><span class="line"><span class="addition">+        #define xPortRaisePrivilege( xRunningPrivileged )                      \</span></span><br><span class="line"><span class="addition">+        &#123;                                                                      \</span></span><br><span class="line"><span class="addition">+            /* Check whether the processor is already privileged. */           \</span></span><br><span class="line"><span class="addition">+            xRunningPrivileged = portIS_PRIVILEGED();                          \</span></span><br><span class="line"><span class="addition">+                                                                               \</span></span><br><span class="line"><span class="addition">+            /* If the processor is not already privileged, raise privilege. */ \</span></span><br><span class="line"><span class="addition">+            if( xRunningPrivileged == pdFALSE )                                \</span></span><br><span class="line"><span class="addition">+            &#123;                                                                  \</span></span><br><span class="line"><span class="addition">+                portRAISE_PRIVILEGE();                                         \</span></span><br><span class="line"><span class="addition">+            &#125;                                                                  \</span></span><br><span class="line"><span class="addition">+        &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        /**</span></span><br><span class="line"><span class="addition">+         * @brief If xRunningPrivileged is not pdTRUE, calls the port specific</span></span><br><span class="line"><span class="addition">+         * code to reset the privilege, otherwise does nothing.</span></span><br><span class="line"><span class="addition">+         */</span></span><br><span class="line"><span class="addition">+        #define vPortResetPrivilege( xRunningPrivileged )   \</span></span><br><span class="line"><span class="addition">+        &#123;                                                   \</span></span><br><span class="line"><span class="addition">+            if( xRunningPrivileged == pdFALSE )             \</span></span><br><span class="line"><span class="addition">+            &#123;                                               \</span></span><br><span class="line"><span class="addition">+                portRESET_PRIVILEGE();                      \</span></span><br><span class="line"><span class="addition">+            &#125;                                               \</span></span><br><span class="line"><span class="addition">+        &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">     #endif /* MPU_WRAPPERS_INCLUDED_FROM_API_FILE */</span><br><span class="line"> </span><br><span class="line"> #else /* portUSING_MPU_WRAPPERS */</span><br><span class="line"><span class="comment">diff --git a/portable/Common/mpu_wrappers.c b/portable/Common/mpu_wrappers.c</span></span><br><span class="line"><span class="comment">index 7a04fb8a7d..c5b71d14b8 100644</span></span><br><span class="line"><span class="comment">--- a/portable/Common/mpu_wrappers.c</span></span><br><span class="line"><span class="comment">+++ b/portable/Common/mpu_wrappers.c</span></span><br><span class="line"><span class="meta">@@ -46,45 +46,6 @@</span></span><br><span class="line"> #include &quot;mpu_prototypes.h&quot;</span><br><span class="line"> </span><br><span class="line"> #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE</span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-/**</span></span><br><span class="line"><span class="deletion">- * @brief Calls the port specific code to raise the privilege.</span></span><br><span class="line"><span class="deletion">- *</span></span><br><span class="line"><span class="deletion">- * @return pdFALSE if privilege was raised, pdTRUE otherwise.</span></span><br><span class="line"><span class="deletion">- */</span></span><br><span class="line"><span class="deletion">-BaseType_t xPortRaisePrivilege( void ) FREERTOS_SYSTEM_CALL;</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-/**</span></span><br><span class="line"><span class="deletion">- * @brief If xRunningPrivileged is not pdTRUE, calls the port specific</span></span><br><span class="line"><span class="deletion">- * code to reset the privilege, otherwise does nothing.</span></span><br><span class="line"><span class="deletion">- */</span></span><br><span class="line"><span class="deletion">-void vPortResetPrivilege( BaseType_t xRunningPrivileged );</span></span><br><span class="line"><span class="deletion">-/*-----------------------------------------------------------*/</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-BaseType_t xPortRaisePrivilege( void ) /* FREERTOS_SYSTEM_CALL */</span></span><br><span class="line"><span class="deletion">-&#123;</span></span><br><span class="line"><span class="deletion">-    BaseType_t xRunningPrivileged;</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-    /* Check whether the processor is already privileged. */</span></span><br><span class="line"><span class="deletion">-    xRunningPrivileged = portIS_PRIVILEGED();</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-    /* If the processor is not already privileged, raise privilege. */</span></span><br><span class="line"><span class="deletion">-    if( xRunningPrivileged == pdFALSE )</span></span><br><span class="line"><span class="deletion">-    &#123;</span></span><br><span class="line"><span class="deletion">-        portRAISE_PRIVILEGE();</span></span><br><span class="line"><span class="deletion">-    &#125;</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-    return xRunningPrivileged;</span></span><br><span class="line"><span class="deletion">-&#125;</span></span><br><span class="line"><span class="deletion">-/*-----------------------------------------------------------*/</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="deletion">-void vPortResetPrivilege( BaseType_t xRunningPrivileged )</span></span><br><span class="line"><span class="deletion">-&#123;</span></span><br><span class="line"><span class="deletion">-    if( xRunningPrivileged == pdFALSE )</span></span><br><span class="line"><span class="deletion">-    &#123;</span></span><br><span class="line"><span class="deletion">-        portRESET_PRIVILEGE();</span></span><br><span class="line"><span class="deletion">-    &#125;</span></span><br><span class="line"><span class="deletion">-&#125;</span></span><br></pre></td></tr></table></figure><p>修复方法是将xPortRaisePrivilege()和vPortResetPrivilege()函数重新定义为宏，放在mpu_wrappers.h中，将函数转换为宏可以在一定程度上减小风险：</p><ul><li>宏在预处理阶段直接展开到调用宏的代码中，宏没有一个在链接阶段可解析和可调用的函数地址，因此难以被非预期的代码直接调用；</li><li>宏可以在编译时控制可见性，比如通过在宏的定义前使用 <code>static</code> 或其他编译器特定的指示，确保这些宏只能在预定义的文件或模块中使用；</li><li>宏还可以增加额外的安全检查或条件编译逻辑，以便仅在确定是内核代码时才允许权限升级。</li></ul><h2 id="堆中动态内存分配存在整数溢出"><a href="#堆中动态内存分配存在整数溢出" class="headerlink" title="堆中动态内存分配存在整数溢出"></a>堆中动态内存分配存在整数溢出</h2><h3 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><strong>12&#x2F;15&#x2F;2020 - FreeRTOS Kernel V10.4.2 and earlier</strong></p><ul><li>In <a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/0b0a2060c0f40a561f97ad7bfbf35d983c33a686/portable/MemMang/heap_2.c#L139">heap2.c</a> there is an unchecked possible addition overflow when calculating the size of the block of memory to be allocated that could result in the size overflowing and the allocation returning success but allocating only a fraction of the memory asked for. This will only affect code where the amount of memory being allocated is within 8 bytes of 4 GB.</li></ul><p>FreeRTOS V10.4.3 and newer contains additional code that checks for and prevents these potential overflows.</p><p>The public CVE record for this can be found at MITRE: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32020">CVE-2021-32020</a>.</p><p>在heap2.c中，计算要分配的内存块的大小时， 未对加法操作进行检查，导致出现整数上溢，分配的内存块大小远小于请求分配的大小，后续将进一步造成缓冲区溢出。</p><h3 id="漏洞详情-2"><a href="#漏洞详情-2" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> * <span class="title function_">pvPortMalloc</span><span class="params">( <span class="type">size_t</span> xWantedSize )</span></span><br><span class="line">&#123;</span><br><span class="line">    BlockLink_t * pxBlock, * pxPreviousBlock, * pxNewBlockLink;</span><br><span class="line">    <span class="type">static</span> BaseType_t xHeapHasBeenInitialised = pdFALSE;</span><br><span class="line">    <span class="type">void</span> * pvReturn = <span class="literal">NULL</span>;</span><br><span class="line">    vTaskSuspendAll();</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* If this is the first call to malloc then the heap will require</span></span><br><span class="line"><span class="comment">         * initialisation to setup the list of free blocks. */</span></span><br><span class="line">        <span class="keyword">if</span>( xHeapHasBeenInitialised == pdFALSE )</span><br><span class="line">        &#123;</span><br><span class="line">            prvHeapInit();</span><br><span class="line">            xHeapHasBeenInitialised = pdTRUE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* The wanted size is increased so it can contain a BlockLink_t</span></span><br><span class="line"><span class="comment">         * structure in addition to the requested amount of bytes. */</span></span><br><span class="line">        <span class="keyword">if</span>( xWantedSize &gt; <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            xWantedSize += heapSTRUCT_SIZE;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* Ensure that blocks are always aligned to the required number of bytes. */</span></span><br><span class="line">            <span class="keyword">if</span>( ( xWantedSize &amp; portBYTE_ALIGNMENT_MASK ) != <span class="number">0</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* Byte alignment required. */</span></span><br><span class="line">                <span class="comment">// 对齐过程存在溢出</span></span><br><span class="line">                xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize &amp; portBYTE_ALIGNMENT_MASK ) );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( ( xWantedSize &gt; <span class="number">0</span> ) &amp;&amp; ( xWantedSize &lt; configADJUSTED_HEAP_SIZE ) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* Blocks are stored in byte order - traverse the list from the start</span></span><br><span class="line"><span class="comment">             * (smallest) block until one of adequate size is found. */</span></span><br><span class="line">            pxPreviousBlock = &amp;xStart;</span><br><span class="line">            pxBlock = xStart.pxNextFreeBlock;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 寻找一个大小合适的块，大小比xWantedSize大</span></span><br><span class="line">            <span class="keyword">while</span>( ( pxBlock-&gt;xBlockSize &lt; xWantedSize ) &amp;&amp; ( pxBlock-&gt;pxNextFreeBlock != <span class="literal">NULL</span> ) )</span><br><span class="line">            &#123;</span><br><span class="line">                pxPreviousBlock = pxBlock;</span><br><span class="line">                pxBlock = pxBlock-&gt;pxNextFreeBlock;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/* If we found the end marker then a block of adequate size was not found. */</span></span><br><span class="line">            <span class="keyword">if</span>( pxBlock != &amp;xEnd )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* Return the memory space - jumping over the BlockLink_t structure</span></span><br><span class="line"><span class="comment">                 * at its start. */</span></span><br><span class="line">                <span class="comment">// 分配的内存块</span></span><br><span class="line">                pvReturn = ( <span class="type">void</span> * ) ( ( ( <span class="type">uint8_t</span> * ) pxPreviousBlock-&gt;pxNextFreeBlock ) + heapSTRUCT_SIZE );</span><br><span class="line">                <span class="comment">/* This block is being returned for use so must be taken out of the</span></span><br><span class="line"><span class="comment">                 * list of free blocks. */</span></span><br><span class="line">                pxPreviousBlock-&gt;pxNextFreeBlock = pxBlock-&gt;pxNextFreeBlock;</span><br><span class="line">                <span class="comment">/* If the block is larger than required it can be split into two. */</span></span><br><span class="line">                <span class="keyword">if</span>( ( pxBlock-&gt;xBlockSize - xWantedSize ) &gt; heapMINIMUM_BLOCK_SIZE )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* This block is to be split into two.  Create a new block</span></span><br><span class="line"><span class="comment">                     * following the number of bytes requested. The void cast is</span></span><br><span class="line"><span class="comment">                     * used to prevent byte alignment warnings from the compiler. */</span></span><br><span class="line">                    pxNewBlockLink = ( <span class="type">void</span> * ) ( ( ( <span class="type">uint8_t</span> * ) pxBlock ) + xWantedSize );</span><br><span class="line">                    <span class="comment">/* Calculate the sizes of two blocks split from the single</span></span><br><span class="line"><span class="comment">                     * block. */</span></span><br><span class="line">                    pxNewBlockLink-&gt;xBlockSize = pxBlock-&gt;xBlockSize - xWantedSize;</span><br><span class="line">                    pxBlock-&gt;xBlockSize = xWantedSize;</span><br><span class="line">                    <span class="comment">/* Insert the new block into the list of free blocks. */</span></span><br><span class="line">                    prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );</span><br><span class="line">                &#125;</span><br><span class="line">                xFreeBytesRemaining -= pxBlock-&gt;xBlockSize;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        traceMALLOC( pvReturn, xWantedSize );</span><br><span class="line">    &#125;</span><br><span class="line">    ( <span class="type">void</span> ) xTaskResumeAll();</span><br><span class="line">    <span class="meta">#<span class="keyword">if</span> ( configUSE_MALLOC_FAILED_HOOK == 1 )</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( pvReturn == <span class="literal">NULL</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">vApplicationMallocFailedHook</span><span class="params">( <span class="type">void</span> )</span>;</span><br><span class="line">                vApplicationMallocFailedHook();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="keyword">return</span> pvReturn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在进行xWantedSize大小对齐时，没有对对齐后的xWantedSize大小进行检查，导致可能出现整数上溢，并将未检查的xWantedSize值传递给后面的代码，直接进行内存分配，导致分配的内存大小远小于请求的大小，后续将进一步造成缓冲区溢出。</p><h3 id="修复方案-2"><a href="#修复方案-2" class="headerlink" title="修复方案"></a>修复方案</h3><p><a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/c7a9a01c94987082b223d3e59969ede64363da63">https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/c7a9a01c94987082b223d3e59969ede64363da63</a></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/portable/MemMang/heap_2.c b/portable/MemMang/heap_2.c</span></span><br><span class="line"><span class="comment">index 640cd54fdd..e132ae3ea8 100644</span></span><br><span class="line"><span class="comment">--- a/portable/MemMang/heap_2.c</span></span><br><span class="line"><span class="comment">+++ b/portable/MemMang/heap_2.c</span></span><br><span class="line"><span class="meta">@@ -132,21 +131,32 @@</span> void * pvPortMalloc( size_t xWantedSize )</span><br><span class="line">             xHeapHasBeenInitialised = pdTRUE;</span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line"><span class="deletion">-        /* The wanted size is increased so it can contain a BlockLink_t</span></span><br><span class="line"><span class="addition">+        /* The wanted size must be increased so it can contain a BlockLink_t</span></span><br><span class="line">          * structure in addition to the requested amount of bytes. */</span><br><span class="line"><span class="deletion">-        if( xWantedSize &gt; 0 )</span></span><br><span class="line"><span class="addition">+        if( ( xWantedSize &gt; 0 ) &amp;&amp; </span></span><br><span class="line"><span class="addition">+            ( ( xWantedSize + heapSTRUCT_SIZE ) &gt;  xWantedSize ) ) /* Overflow check */</span></span><br><span class="line">         &#123;</span><br><span class="line">             xWantedSize += heapSTRUCT_SIZE;</span><br><span class="line"> </span><br><span class="line"><span class="deletion">-            /* Ensure that blocks are always aligned to the required number of bytes. */</span></span><br><span class="line"><span class="deletion">-            if( ( xWantedSize &amp; portBYTE_ALIGNMENT_MASK ) != 0 )</span></span><br><span class="line"><span class="addition">+            /* Byte alignment required. Check for overflow. */</span></span><br><span class="line"><span class="addition">+            if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize &amp; portBYTE_ALIGNMENT_MASK ) ) ) </span></span><br><span class="line"><span class="addition">+                    &gt; xWantedSize )</span></span><br><span class="line">             &#123;</span><br><span class="line"><span class="deletion">-                /* Byte alignment required. */</span></span><br><span class="line">                 xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize &amp; portBYTE_ALIGNMENT_MASK ) );</span><br><span class="line"><span class="addition">+                configASSERT( ( xWantedSize &amp; portBYTE_ALIGNMENT_MASK ) == 0 );</span></span><br><span class="line">             &#125;</span><br><span class="line"><span class="addition">+            else</span></span><br><span class="line"><span class="addition">+            &#123;</span></span><br><span class="line"><span class="addition">+                xWantedSize = 0;</span></span><br><span class="line"><span class="addition">+            &#125;       </span></span><br><span class="line"><span class="addition">+        &#125;</span></span><br><span class="line"><span class="addition">+        else </span></span><br><span class="line"><span class="addition">+        &#123;</span></span><br><span class="line"><span class="addition">+            xWantedSize = 0; </span></span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line"><span class="deletion">-        if( ( xWantedSize &gt; 0 ) &amp;&amp; ( xWantedSize &lt; configADJUSTED_HEAP_SIZE ) )</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        if( ( xWantedSize &gt; 0 ) &amp;&amp; ( xWantedSize &lt;= xFreeBytesRemaining ) )</span></span><br><span class="line">         &#123;</span><br><span class="line">             /* Blocks are stored in byte order - traverse the list from the start</span><br><span class="line">              * (smallest) block until one of adequate size is found. */</span><br></pre></td></tr></table></figure><p>修复方案是检查xWantedSize对齐之后的值，如果其比对齐之前的xWantedSize小，那说明出现溢出；如果没有溢出，那么对齐之后的xWantedSize值应该大于对齐之前的值。</p><h2 id="队列创建过程中内存分配存在整数溢出"><a href="#队列创建过程中内存分配存在整数溢出" class="headerlink" title="队列创建过程中内存分配存在整数溢出"></a>队列创建过程中内存分配存在整数溢出</h2><h3 id="漏洞描述-3"><a href="#漏洞描述-3" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><strong>12&#x2F;15&#x2F;2020 - FreeRTOS Kernel V10.4.2 and earlier</strong></p><ul><li>In <a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/0b0a2060c0f40a561f97ad7bfbf35d983c33a686/queue.c#L409">queue.c</a> there is an unchecked possible addition overflow during queue allocation. This will only affect code where the size of the queue is within sizeof(queue_t) bytes of 4GB.</li></ul><p>FreeRTOS V10.4.3 and newer contains additional code that checks for and prevents these potential overflows.</p><p>The public CVE record for this can be found at MITRE: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31571">CVE-2021-31571</a></p><p>在queue.c中，队列内存分配期间可能存在未经检查的加法溢出（整数溢出）。</p><h3 id="漏洞详情-3"><a href="#漏洞详情-3" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )</span></span><br><span class="line">    QueueHandle_t <span class="title function_">xQueueGenericCreate</span><span class="params">( <span class="type">const</span> UBaseType_t uxQueueLength,</span></span><br><span class="line"><span class="params">                                       <span class="type">const</span> UBaseType_t uxItemSize,</span></span><br><span class="line"><span class="params">                                       <span class="type">const</span> <span class="type">uint8_t</span> ucQueueType )</span></span><br><span class="line">    &#123;</span><br><span class="line">        Queue_t * pxNewQueue;</span><br><span class="line">        <span class="type">size_t</span> xQueueSizeInBytes;</span><br><span class="line">        <span class="type">uint8_t</span> * pucQueueStorage;</span><br><span class="line">        configASSERT( uxQueueLength &gt; ( UBaseType_t ) <span class="number">0</span> );</span><br><span class="line">        <span class="comment">/* Allocate enough space to hold the maximum number of items that</span></span><br><span class="line"><span class="comment">         * can be in the queue at any time.  It is valid for uxItemSize to be</span></span><br><span class="line"><span class="comment">         * zero in the case the queue is used as a semaphore. */</span></span><br><span class="line">        xQueueSizeInBytes = ( <span class="type">size_t</span> ) ( uxQueueLength * uxItemSize ); <span class="comment">/*lint !e961 MISRA exception as the casts are only redundant for some ports. */</span></span><br><span class="line">        <span class="comment">/* Check for multiplication overflow. */</span></span><br><span class="line">        configASSERT( ( uxItemSize == <span class="number">0</span> ) || ( uxQueueLength == ( xQueueSizeInBytes / uxItemSize ) ) );</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Allocate the queue and storage area.  Justification for MISRA</span></span><br><span class="line"><span class="comment">         * deviation as follows:  pvPortMalloc() always ensures returned memory</span></span><br><span class="line"><span class="comment">         * blocks are aligned per the requirements of the MCU stack.  In this case</span></span><br><span class="line"><span class="comment">         * pvPortMalloc() must return a pointer that is guaranteed to meet the</span></span><br><span class="line"><span class="comment">         * alignment requirements of the Queue_t structure - which in this case</span></span><br><span class="line"><span class="comment">         * is an int8_t *.  Therefore, whenever the stack alignment requirements</span></span><br><span class="line"><span class="comment">         * are greater than or equal to the pointer to char requirements the cast</span></span><br><span class="line"><span class="comment">         * is safe.  In other cases alignment requirements are not strict (one or</span></span><br><span class="line"><span class="comment">         * two bytes). */</span></span><br><span class="line">        <span class="comment">// 在调用pvPortMalloc()分配内存之前，没有检查sizeof( Queue_t ) + xQueueSizeInBytes是否存在溢出</span></span><br><span class="line">        pxNewQueue = ( Queue_t * ) pvPortMalloc( <span class="keyword">sizeof</span>( Queue_t ) + xQueueSizeInBytes ); <span class="comment">/*lint !e9087 !e9079 see comment above. */</span></span><br><span class="line">        <span class="keyword">if</span>( pxNewQueue != <span class="literal">NULL</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* Jump past the queue structure to find the location of the queue</span></span><br><span class="line"><span class="comment">             * storage area. */</span></span><br><span class="line">            pucQueueStorage = ( <span class="type">uint8_t</span> * ) pxNewQueue;</span><br><span class="line">            pucQueueStorage += <span class="keyword">sizeof</span>( Queue_t ); <span class="comment">/*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */</span></span><br><span class="line">            <span class="meta">#<span class="keyword">if</span> ( configSUPPORT_STATIC_ALLOCATION == 1 )</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* Queues can be created either statically or dynamically, so</span></span><br><span class="line"><span class="comment">                     * note this task was created dynamically in case it is later</span></span><br><span class="line"><span class="comment">                     * deleted. */</span></span><br><span class="line">                    pxNewQueue-&gt;ucStaticallyAllocated = pdFALSE;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="meta">#<span class="keyword">endif</span> <span class="comment">/* configSUPPORT_STATIC_ALLOCATION */</span></span></span><br><span class="line">            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            traceQUEUE_CREATE_FAILED( ucQueueType );</span><br><span class="line">            mtCOVERAGE_TEST_MARKER();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pxNewQueue;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在调用pvPortMalloc()函数分配内存之前，没有检查参数sizeof( Queue_t ) + xQueueSizeInBytes是否会溢出，如果溢出，将导致分配的内存远小于所需的内存大小。xQueueSizeInBytes表示队列所需存储空间的大小（以字节为单位），它决定了队列中可以存储多少数据；sizeof( Queue_t ) + xQueueSizeInBytes表示队列对象Queue_t的总大小是Queue_t结构体的大小加上队列数据存储区的大小。</p><h3 id="修复方案-3"><a href="#修复方案-3" class="headerlink" title="修复方案"></a>修复方案</h3><p><a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/47338393f1f79558f6144213409f09f81d7c4837">https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/47338393f1f79558f6144213409f09f81d7c4837</a></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/queue.c b/queue.c</span></span><br><span class="line"><span class="comment">index d2e27e55a5..b01dfd11ff 100644</span></span><br><span class="line"><span class="comment">--- a/queue.c</span></span><br><span class="line"><span class="comment">+++ b/queue.c</span></span><br><span class="line"><span class="meta">@@ -397,6 +397,9 @@</span> BaseType_t xQueueGenericReset( QueueHandle_t xQueue,</span><br><span class="line">         /* Check for multiplication overflow. */</span><br><span class="line">         configASSERT( ( uxItemSize == 0 ) || ( uxQueueLength == ( xQueueSizeInBytes / uxItemSize ) ) );</span><br><span class="line"> </span><br><span class="line"><span class="addition">+        /* Check for addition overflow. */</span></span><br><span class="line"><span class="addition">+        configASSERT( ( sizeof( Queue_t ) + xQueueSizeInBytes ) &gt;  xQueueSizeInBytes );</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">         /* Allocate the queue and storage area.  Justification for MISRA</span><br><span class="line">          * deviation as follows:  pvPortMalloc() always ensures returned memory</span><br><span class="line">          * blocks are aligned per the requirements of the MCU stack.  In this case</span><br></pre></td></tr></table></figure><p>修复方法是添加一个断言，如果sizeof( Queue_t ) + xQueueSizeInBytes的大小大于xQueueSizeInBytes，则没有产生溢出，否则，出现溢出，断言configASSERT就会报错，触发错误处理。</p><h2 id="流缓冲区创建过程中内存分配存在整数溢出"><a href="#流缓冲区创建过程中内存分配存在整数溢出" class="headerlink" title="流缓冲区创建过程中内存分配存在整数溢出"></a>流缓冲区创建过程中内存分配存在整数溢出</h2><h3 id="漏洞描述-4"><a href="#漏洞描述-4" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p><strong>12&#x2F;15&#x2F;2020 - FreeRTOS Kernel V10.4.2 and earlier</strong></p><ul><li>In <a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/0b0a2060c0f40a561f97ad7bfbf35d983c33a686/stream_buffer.c#L262">stream_buffer.c</a> there is an unchecked possible addition overflow during steam buffer creation. This will only affect code where the size of the stream buffer is within sizeof(StreamBuffer_t) bytes of 4GB.</li></ul><p>FreeRTOS V10.4.3 and newer contains additional code that checks for and prevents these potential overflows.</p><p>The public CVE record for this can be found at MITRE: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31572">CVE-2021-31572</a></p><p>在stream_buffer.c中，创建流缓冲区期间可能存在未经检查的加法溢出（整数溢出）。</p><h3 id="漏洞详情-4"><a href="#漏洞详情-4" class="headerlink" title="漏洞详情"></a>漏洞详情</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )</span></span><br><span class="line">    StreamBufferHandle_t <span class="title function_">xStreamBufferGenericCreate</span><span class="params">( <span class="type">size_t</span> xBufferSizeBytes,</span></span><br><span class="line"><span class="params">                                                     <span class="type">size_t</span> xTriggerLevelBytes,</span></span><br><span class="line"><span class="params">                                                     BaseType_t xIsMessageBuffer )</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">uint8_t</span> * pucAllocatedMemory;</span><br><span class="line">        <span class="type">uint8_t</span> ucFlags;</span><br><span class="line">        <span class="comment">/* In case the stream buffer is going to be used as a message buffer</span></span><br><span class="line"><span class="comment">         * (that is, it will hold discrete messages with a little meta data that</span></span><br><span class="line"><span class="comment">         * says how big the next message is) check the buffer will be large enough</span></span><br><span class="line"><span class="comment">         * to hold at least one message. */</span></span><br><span class="line">        <span class="keyword">if</span>( xIsMessageBuffer == pdTRUE )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* Is a message buffer but not statically allocated. */</span></span><br><span class="line">            ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;</span><br><span class="line">            configASSERT( xBufferSizeBytes &gt; sbBYTES_TO_STORE_MESSAGE_LENGTH );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* Not a message buffer and not statically allocated. */</span></span><br><span class="line">            ucFlags = <span class="number">0</span>;</span><br><span class="line">            configASSERT( xBufferSizeBytes &gt; <span class="number">0</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        configASSERT( xTriggerLevelBytes &lt;= xBufferSizeBytes );</span><br><span class="line">        <span class="comment">/* A trigger level of 0 would cause a waiting task to unblock even when</span></span><br><span class="line"><span class="comment">         * the buffer was empty. */</span></span><br><span class="line">        <span class="keyword">if</span>( xTriggerLevelBytes == ( <span class="type">size_t</span> ) <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            xTriggerLevelBytes = ( <span class="type">size_t</span> ) <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* A stream buffer requires a StreamBuffer_t structure and a buffer.</span></span><br><span class="line"><span class="comment">         * Both are allocated in a single call to pvPortMalloc().  The</span></span><br><span class="line"><span class="comment">         * StreamBuffer_t structure is placed at the start of the allocated memory</span></span><br><span class="line"><span class="comment">         * and the buffer follows immediately after.  The requested size is</span></span><br><span class="line"><span class="comment">         * incremented so the free space is returned as the user would expect -</span></span><br><span class="line"><span class="comment">         * this is a quirk of the implementation that means otherwise the free</span></span><br><span class="line"><span class="comment">         * space would be reported as one byte smaller than would be logically</span></span><br><span class="line"><span class="comment">         * expected. */</span></span><br><span class="line">        xBufferSizeBytes++;</span><br><span class="line">        <span class="comment">// 在调用pvPortMalloc()分配内存之前，没有检查xBufferSizeBytes + sizeof( StreamBuffer_t )是否存在溢出</span></span><br><span class="line">        pucAllocatedMemory = ( <span class="type">uint8_t</span> * ) pvPortMalloc( xBufferSizeBytes + <span class="keyword">sizeof</span>( StreamBuffer_t ) ); <span class="comment">/*lint !e9079 malloc() only returns void*. */</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>( pucAllocatedMemory != <span class="literal">NULL</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory,       <span class="comment">/* Structure at the start of the allocated memory. */</span> <span class="comment">/*lint !e9087 Safe cast as allocated memory is aligned. */</span> <span class="comment">/*lint !e826 Area is not too small and alignment is guaranteed provided malloc() behaves as expected and returns aligned buffer. */</span></span><br><span class="line">                                          pucAllocatedMemory + <span class="keyword">sizeof</span>( StreamBuffer_t ), <span class="comment">/* Storage area follows. */</span> <span class="comment">/*lint !e9016 Indexing past structure valid for uint8_t pointer, also storage area has no alignment requirement. */</span></span><br><span class="line">                                          xBufferSizeBytes,</span><br><span class="line">                                          xTriggerLevelBytes,</span><br><span class="line">                                          ucFlags );</span><br><span class="line">            traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffer );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ( StreamBufferHandle_t ) pucAllocatedMemory; <span class="comment">/*lint !e9087 !e826 Safe cast as allocated memory is aligned. */</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在调用pvPortMalloc()函数分配内存之前，没有检查参数xBufferSizeBytes + sizeof( StreamBuffer_t )是否会溢出，如果溢出，将导致分配的内存远小于所需的内存大小。</p><h3 id="修复方案-4"><a href="#修复方案-4" class="headerlink" title="修复方案"></a>修复方案</h3><p><a href="https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/d05b9c123f2bf9090bce386a244fc934ae44db5b">https://github.com/FreeRTOS/FreeRTOS-Kernel/commit/d05b9c123f2bf9090bce386a244fc934ae44db5b</a></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/stream_buffer.c b/stream_buffer.c</span></span><br><span class="line"><span class="comment">index 03cfc06156..fec03a7816 100644</span></span><br><span class="line"><span class="comment">--- a/stream_buffer.c</span></span><br><span class="line"><span class="comment">+++ b/stream_buffer.c</span></span><br><span class="line"><span class="meta">@@ -258,8 +258,16 @@</span> static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,</span><br><span class="line">          * this is a quirk of the implementation that means otherwise the free</span><br><span class="line">          * space would be reported as one byte smaller than would be logically</span><br><span class="line">          * expected. */</span><br><span class="line"><span class="deletion">-        xBufferSizeBytes++;</span></span><br><span class="line"><span class="deletion">-        pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /*lint !e9079 malloc() only returns void*. */</span></span><br><span class="line"><span class="addition">+        if( xBufferSizeBytes &lt; ( xBufferSizeBytes + 1 + sizeof( StreamBuffer_t ) ) )</span></span><br><span class="line"><span class="addition">+        &#123;</span></span><br><span class="line"><span class="addition">+            xBufferSizeBytes++;</span></span><br><span class="line"><span class="addition">+            pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /*lint !e9079 malloc() only returns void*. */</span></span><br><span class="line"><span class="addition">+        &#125;</span></span><br><span class="line"><span class="addition">+        else</span></span><br><span class="line"><span class="addition">+        &#123;</span></span><br><span class="line"><span class="addition">+            pucAllocatedMemory = NULL;</span></span><br><span class="line"><span class="addition">+        &#125;</span></span><br><span class="line"><span class="addition">+        </span></span><br><span class="line"> </span><br><span class="line">         if( pucAllocatedMemory != NULL )</span><br><span class="line">         &#123;</span><br></pre></td></tr></table></figure><p>修复方法是检查xBufferSizeBytes的值是否比xBufferSizeBytes + 1 + sizeof( StreamBuffer_t )的值要小，如果比相加之后的值小，说明没有溢出，否则产生溢出。</p><p><strong>参考资料：</strong></p><p><a href="https://www.freertos.org/zh-cn-cmn-s/FreeRTOS-Plus/FreeRTOS_Plus_TCP/Embedded_Ethernet_Buffer_Management.html">TCP&#x2F;IP 堆栈网络缓冲区分配方案</a></p><p><a href="https://www.freertos.org/security/security_updates.html">FreeRTOS Security Updates</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞整理 </tag>
            
            <tag> RTOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某书会议室预定流程分析(protobuf)</title>
      <link href="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/"/>
      <url>/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/</url>
      
        <content type="html"><![CDATA[<h2 id="分析目标"><a href="#分析目标" class="headerlink" title="分析目标"></a>分析目标</h2><p>分析飞书会议室预定的流程，构造请求数据，并分析响应数据，实现会议室预定自动化。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>浏览器登录飞书日历网页版，添加日程，F12查看请求和响应的数据包以及网页信息：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131100033288.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131100926099.png"></p><p>观察数据包和网页信息，预定会议室的流程首先是查询所有的工区信息，然后再根据工区信息去查询工区会议室信息，将结果通过网页展示给用户，用户选择可用的会议室之后，点击保存按钮即可预定会议室。</p><p><strong>难点：</strong>可以观察到请求和响应的数据包，不是json数据，而是protobuf序列化的流数据。</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131103300602.png"></p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131104443613.png" style="zoom:200%;"><p>关于protobuf：</p><p><a href="https://protobuf.dev/">https://protobuf.dev/</a></p><p><a href="https://cloud.tencent.com/developer/article/1925228">Python 爬虫进阶必备 | 由某知识平台延伸的 Protobuf 协议分析学习</a></p><p><strong>接下来需要做什么？</strong></p><ol><li>首先需要分析构造请求数据和解析响应数据的js代码，得到<code>protobuf</code>的结构文件，然后根据<code>protobuf</code>的结构文件反序列化请求和响应的数据，得到json格式数据；</li><li>分析json数据中各个字段的含义，能够手动构造对应的请求数据。</li></ol><p>经过上述两个步骤，即可实现会议室预定的自动化。</p><h2 id="JS逆向"><a href="#JS逆向" class="headerlink" title="JS逆向"></a>JS逆向</h2><p>根据上述的分析流程，将js逆向工作分为3个部分：</p><ol><li>获取工区信息</li><li>获取会议室信息</li><li>预定会议室</li></ol><p><strong>js逆向如何开始&#x2F;如何找到分析入口？</strong></p><p>方法一：</p><p>针对本案例中的情况，数据构造和请求是在用户点击按钮之后，所以可以先打一个监听鼠标点击事件的断点，然后点击添加会议室即可触发断点。</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131110028832.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131110902899.png"></p><p>触发断点之后，可以观察代码上下文和调用堆栈，当代码上下文中出现protobuf和请求相关的代码或者调用堆栈中出现较多的函数时，可以进一步观察，在代码上下文继续打断点调试，或者查看调用堆栈中的函数的上下文代码，看是否有跟protobuf和请求相关的代码。如果没有相关的信息，可以点击向上的箭头，跳出这个函数，当然也可以单步执行，但是速度会比跳出函数慢一些。通过上述方法可以定位到疑似数据请求的代码，可以点击代码左侧在xt()函数中下断点，再次调试（可以F12关闭开发者工具之后等到网页加载完成再F12调试，这样不用一直卡在调试界面需要手动点击执行js代码）。</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131112057076.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240131112504126.png"></p><p>可以看到，xt()函数确实是在构造请求，并且还有返回结果。但是xt()函数接收参数，查看调用堆栈，找到构造参数e的函数。同时注意到xt()函数的参数e经过qt(e)调用之后生成新的数组n。鼠标放到变量n上可以看到n中的数据，或者通过控制台将n的值打印出来。</p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240201203655058.png" alt style="zoom:200%;"><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240201203735740.png"></p><p>查看调用栈，找到构造xt()函数参数的代码：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240201203901304.png"></p><p>根据代码和calendarevents.PullBuildingsRequest等字符串可以推测出encode()是生成protocol序列化请求数据的代码，decode的反序列请求返回的protobuf数据的代码，现在已将定位到数据处理的关键入口代码。</p><p>方法二：</p><p>定位js逆向开始的入口，还可以全局搜索特殊字符串，如protobuf或者请求相关的字符串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;content-type&quot;: &quot;application/x-protobuf&quot; 或者 application/x-protobuf</span><br><span class="line">&quot;POST&quot;</span><br></pre></td></tr></table></figure><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240201204622525.png" alt style="zoom:150%;"><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240201204707397.png"></p><p>这种方法也能定位到分析数据构造的入口代码。如果搜索出的结果较多，可以依次打上断点，再调试一遍，看断在哪处代码，然后根据代码上下文和调用堆栈判断入口代码位置。</p><h3 id="获取工区信息"><a href="#获取工区信息" class="headerlink" title="获取工区信息"></a>获取工区信息</h3><p>通过上面的分析，获取工区信息先要发送请求，然后再解析响应的数据：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206093217561.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206093843331.png"></p><p>经过打断点调试分析和函数名判断，encode是构造获取工区信息的请求数据的代码，decode是解析服务端返回工区信息的代码，xt()函数将encode所构造的获取工区信息的请求数据加上cmd（cmd用于向服务器指定需要进行的操作，如获取工区信息、保存会议室等），再进行一层封装，构造成Package数据。也就是说，在构造请求是需要构造两次数据包，一次是请求工区信息的数据包，一次是通用的请求数据包。</p><p><strong>分析到此处，已经定位到关键的代码，可以在开发者工具中调用encode和decode函数去发送和解析数据。一开始尝试直接调用encode和decode的代码，方便而且工作量很小，但是遇到了诸多困难，比如python中无法调用js代码，即使是使用execjs库，也难以为js代码准备self对象，同时，也尝试过直接在浏览器中调用，但是对于js代码，需要执行到对应代码的上下文中，定义了其中的变量，才能调用，否则就是未定义。还有一点，就是这种方式不够优雅和通用。总结来说，还是需要构造.proto文件。</strong></p><p><strong>为什么是构造.proto文件，而不是根据js代码写出对应的构造数据的python代码呢？</strong></p><p>是因为protobuf协议有自己的标准和规范，各种语言对protobuf协议的实现效果都是相同的，都是根据.proto文件进行序列化和反序列化。只要构造出.proto文件，就能通过谷歌官方提供的<a href="https://github.com/protocolbuffers/protobuf/releases">protoc</a>工具根据.proto文件生成对应的python代码，在自己的代码中只需要导入对应的包，就可以进行序列化和反序列化，唯一的难点就是.proto文件。</p><p>Packet.proto：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto2&quot;;</span><br><span class="line"></span><br><span class="line">message Packet &#123;</span><br><span class="line">    optional string sid = 1;</span><br><span class="line">    required int32 payloadType = 2;</span><br><span class="line">    required int32 cmd = 3;</span><br><span class="line">    optional uint32 status = 4;</span><br><span class="line">    required bytes payload = 5;</span><br><span class="line">    required string cid = 6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成Packet_pb2.py文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Tools\protoc-25.1-win64\bin\protoc.exe --python_out=..\pb2 .\Packet.proto</span><br></pre></td></tr></table></figure><p>代码中使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.Packet_pb2</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">request_buildingInfo_encode</span>():</span><br><span class="line">    request_data = &#123;</span><br><span class="line">        <span class="string">&#x27;cmd&#x27;</span>: <span class="number">1010009</span>,</span><br><span class="line">        <span class="string">&#x27;payloadType&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: <span class="built_in">bytes</span>(),</span><br><span class="line">        <span class="string">&#x27;cid&#x27;</span>: utils.generate_cid()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request_buildingInfo = pb2.Packet_pb2.Packet()</span><br><span class="line">    request_buildingInfo.cmd = request_data.get(<span class="string">&#x27;cmd&#x27;</span>)</span><br><span class="line">    request_buildingInfo.payloadType = request_data.get(<span class="string">&#x27;payloadType&#x27;</span>)</span><br><span class="line">    request_buildingInfo.payload = request_data.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    request_buildingInfo.cid = request_data.get(<span class="string">&#x27;cid&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> request_buildingInfo.SerializeToString()</span><br></pre></td></tr></table></figure><p><strong>.proto文件如何构造？</strong></p><p>关键代码是encode和decode，可以将encode理解为序列化，decode理解为反序列化。这里请求工区信息并没有构造太多的数据，所以以解析响应数据为例。</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206100826626.png"></p><p>进入decode代码可以单步调试进入：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/QQ%E5%BD%95%E5%B1%8F20240206101105%20-original-original.gif"></p><p>解析响应的工区信息的decode代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Reader, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">PullBuildingsResponse$decode</span>(<span class="params">r, l</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (! (r <span class="keyword">instanceof</span> <span class="title class_">Reader</span>)) r = <span class="title class_">Reader</span>.<span class="title function_">create</span>(r) <span class="keyword">var</span> c = l === <span class="literal">undefined</span> ? r.<span class="property">len</span>: r.<span class="property">pos</span> + l,</span><br><span class="line">    m = <span class="keyword">new</span> <span class="variable language_">this</span>.<span class="property">ctor</span>,</span><br><span class="line">    k,</span><br><span class="line">    value</span><br><span class="line">    <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c) &#123;</span><br><span class="line">      <span class="keyword">var</span> t = r.<span class="title function_">uint32</span>() <span class="keyword">switch</span> (t &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> (m.<span class="property">buildings</span> === util.<span class="property">emptyObject</span>) m.<span class="property">buildings</span> = &#123;&#125;</span><br><span class="line">        <span class="keyword">var</span> c2 = r.<span class="title function_">uint32</span>() + r.<span class="property">pos</span> </span><br><span class="line">        k = <span class="string">&quot;&quot;</span></span><br><span class="line">        value = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c2) &#123;</span><br><span class="line">          <span class="keyword">var</span> tag2 = r.<span class="title function_">uint32</span>() <span class="keyword">switch</span> (tag2 &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            k = r.<span class="title function_">string</span>();</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">          <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            value = types[<span class="number">0</span>].<span class="title function_">decode</span>(r, r.<span class="title function_">uint32</span>()) <span class="keyword">break</span></span><br><span class="line">          <span class="attr">default</span>:</span><br><span class="line">            r.<span class="title function_">skipType</span>(tag2 &amp; <span class="number">7</span>) <span class="keyword">break</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        m.<span class="property">buildings</span>[k] = value</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        r.<span class="title function_">skipType</span>(t &amp; <span class="number">7</span>) <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>构造的.proto文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">message ResponseBuildingInfo &#123;</span><br><span class="line">    map&lt;string, BuildingInfo&gt; building = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message BuildingInfo &#123;</span><br><span class="line">    string id = 1;</span><br><span class="line">    string name = 2;</span><br><span class="line">    string description = 3;</span><br><span class="line">    float latitude = 4;</span><br><span class="line">    float longitude = 5;</span><br><span class="line">    repeated string floors = 6;</span><br><span class="line">    int32 weight = 9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在解释构造过程之前，先了解一下protobuf序列化数据的结构，序列化格式包括<strong>字段标识</strong>、<strong>字段长度</strong>和<strong>字段值</strong>，字段标识本身包含字段编号和字段类型。</p><p>字段标识的计算方式如下，字段标识的低三位表示字段数据类型，字段标识 &gt;&gt; 3表示字段标号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">字段标识 = (字段号 &lt;&lt; 3) | 字段类型</span><br><span class="line">字段号 = 字段标识 &gt;&gt; 3</span><br></pre></td></tr></table></figure><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206110439071.png"></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">message Test2 &#123;</span><br><span class="line">  optional string b = 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 07 [74 65 73 74 69 6e 67]</span><br></pre></td></tr></table></figure><p>0x12是字段标识，字段编号是2，字段类型是2，表示string；0x07是字段长度为7bytes；[]中的内容是字段值。</p><p>具体分析可以参考官方文档：<strong><a href="https://protobuf.dev/programming-guides/encoding/">https://protobuf.dev/programming-guides/encoding/</a></strong></p><p><strong>接下来逐一分析js代码：</strong></p><p>1.代码首先创建一个Reader对象，用于存储反序列化之后的数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! (r <span class="keyword">instanceof</span> <span class="title class_">Reader</span>)) r = <span class="title class_">Reader</span>.<span class="title function_">create</span>(r) <span class="keyword">var</span> c = l === <span class="literal">undefined</span> ? r.<span class="property">len</span>: r.<span class="property">pos</span> + l,</span><br><span class="line">m = <span class="keyword">new</span> <span class="variable language_">this</span>.<span class="property">ctor</span>,</span><br><span class="line">k,</span><br><span class="line">value</span><br></pre></td></tr></table></figure><p>2.接下来使用while循环不停读取序列化数据，根据之前了解到的protobuf序列化数据的结构，可以知道下面的代码<code>r.uint32()</code>是在读取32bit无符号的字段标识，然后再<code>t &gt;&gt;&gt; 3</code>得到字段编号，然后再用switch-case去匹配不同的字段编号。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> t = r.<span class="title function_">uint32</span>() <span class="keyword">switch</span> (t &gt;&gt;&gt; <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>这里只有一个字段号1，说明这个message（即ResponseBuildingInfo，名字随便起）结构中只有一个字段，如果是其他字段号就跳过：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default</span>:</span><br><span class="line">r.<span class="title function_">skipType</span>(t &amp; <span class="number">7</span>) <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>接下来就是调用<code>r.uint32()</code>读取字段长度，然后再解析工区信息：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c2 = r.<span class="title function_">uint32</span>() + r.<span class="property">pos</span> </span><br></pre></td></tr></table></figure><p>3.调用while循环解析工区信息。<code>var tag2 = r.uint32() switch (tag2 &gt;&gt;&gt; 3) </code>是读取新的字段标识，然后再switch匹配字段编号，有两个字段编号，其中一个类型是string()，另一个类型是复合类型，就是消息嵌套，通过<code>value = types[0].decode(r, r.uint32()) break</code>代码再次调用decode，说明字段2是一个复合类型：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m.<span class="property">buildings</span> === util.<span class="property">emptyObject</span>) m.<span class="property">buildings</span> = &#123;&#125;</span><br><span class="line">        <span class="keyword">var</span> c2 = r.<span class="title function_">uint32</span>() + r.<span class="property">pos</span> </span><br><span class="line">        k = <span class="string">&quot;&quot;</span></span><br><span class="line">        value = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c2) &#123;</span><br><span class="line">          <span class="keyword">var</span> tag2 = r.<span class="title function_">uint32</span>() <span class="keyword">switch</span> (tag2 &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            k = r.<span class="title function_">string</span>();</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">          <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            value = types[<span class="number">0</span>].<span class="title function_">decode</span>(r, r.<span class="title function_">uint32</span>()) <span class="keyword">break</span></span><br><span class="line">          <span class="attr">default</span>:</span><br><span class="line">            r.<span class="title function_">skipType</span>(tag2 &amp; <span class="number">7</span>) <span class="keyword">break</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        m.<span class="property">buildings</span>[k] = value</span><br></pre></td></tr></table></figure><p>可以在调试过程中调用decode打印出解析后的工区信息，更快分析出.proto文件。</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206102956915.png"></p><p>这里有一些特殊，就是ResponseBuildingInfo中的数据是map类型。因为字段1是一个string，字段2是一个消息嵌套，取名为BuildingInfo（自定义）：</p><p><a href="https://protobuf.dev/programming-guides/encoding/#maps">https://protobuf.dev/programming-guides/encoding/#maps</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">message ResponseBuildingInfo &#123;</span><br><span class="line">    map&lt;string, BuildingInfo&gt; building = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.接下来继续分析<code>types[0].decode(r, r.uint32()) </code>，也就是message BuildingInfo：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Reader, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">CalendarBuilding$decode</span>(<span class="params">r, l</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (! (r <span class="keyword">instanceof</span> <span class="title class_">Reader</span>)) r = <span class="title class_">Reader</span>.<span class="title function_">create</span>(r) <span class="keyword">var</span> c = l === <span class="literal">undefined</span> ? r.<span class="property">len</span>: r.<span class="property">pos</span> + l,</span><br><span class="line">    m = <span class="keyword">new</span> <span class="variable language_">this</span>.<span class="property">ctor</span></span><br><span class="line">    <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c) &#123;</span><br><span class="line">      <span class="keyword">var</span> t = r.<span class="title function_">uint32</span>() <span class="keyword">switch</span> (t &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        m.<span class="property">id</span> = r.<span class="title function_">string</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        m.<span class="property">name</span> = r.<span class="title function_">string</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        m.<span class="property">description</span> = r.<span class="title function_">string</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        m.<span class="property">latitude</span> = r.<span class="title function_">float</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        m.<span class="property">longitude</span> = r.<span class="title function_">float</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">if</span> (! (m.<span class="property">floors</span> &amp;&amp; m.<span class="property">floors</span>.<span class="property">length</span>)) </span><br><span class="line">            m.<span class="property">floors</span> = [] </span><br><span class="line">        m.<span class="property">floors</span>.<span class="title function_">push</span>(r.<span class="title function_">string</span>()) </span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">if</span> (! (m.<span class="property">meetingRooms</span> &amp;&amp; m.<span class="property">meetingRooms</span>.<span class="property">length</span>)) </span><br><span class="line">        m.<span class="property">meetingRooms</span> = [] </span><br><span class="line">            m.<span class="property">meetingRooms</span>.<span class="title function_">push</span>(types[<span class="number">6</span>].<span class="title function_">decode</span>(r, r.<span class="title function_">uint32</span>())) </span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        m.<span class="property">isDeleted</span> = r.<span class="title function_">bool</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        m.<span class="property">weight</span> = r.<span class="title function_">int32</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        m.<span class="property">seizeTime</span> = r.<span class="title function_">int64</span>() <span class="keyword">break</span></span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        r.<span class="title function_">skipType</span>(t &amp; <span class="number">7</span>) <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!m.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;id&quot;</span>)) <span class="keyword">throw</span> util.<span class="title class_">ProtocolError</span>(<span class="string">&quot;missing required &#x27;id&#x27;&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">instance</span>: m</span><br><span class="line">    &#125;) <span class="keyword">return</span> m</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>现在有经验之后可以直接看到嵌套消息BuildingInfo中有10个字段（case1-10），第一个字段是string类型的id，第二个字段是string类型的name，其他字段类似。注意其中字段6 floors是string数组类型，在proto中，<code>repeated</code> 关键字来定义在消息内部重复出现（出现零次或多次）的字段。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! (m.<span class="property">floors</span> &amp;&amp; m.<span class="property">floors</span>.<span class="property">length</span>)) m.<span class="property">floors</span> = [] m.<span class="property">floors</span>.<span class="title function_">push</span>(r.<span class="title function_">string</span>()) <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repeated string floors = 6;</span><br></pre></td></tr></table></figure><p>观察解析之后的工区信息，meetingRooms、isDeleted、seizeTime等这些字段信息为空或者没有，在.proto中可以不写这些字段，或者一些不重要的字段，都可以不写，只写一些比较重要的字段，但是需要注意，字段编号要对应好，比如floors字段之后写weight字段，weight字段的编号要对应好js代码中的9，中间不连续。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repeated string floors = 6;</span><br><span class="line">int32 weight = 9;</span><br></pre></td></tr></table></figure><p>最终得到message BuildingInfo结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">message BuildingInfo &#123;</span><br><span class="line">    string id = 1;</span><br><span class="line">    string name = 2;</span><br><span class="line">    string description = 3;</span><br><span class="line">    float latitude = 4;</span><br><span class="line">    float longitude = 5;</span><br><span class="line">    repeated string floors = 6;</span><br><span class="line">    int32 weight = 9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终构造出解析工区信息的结构体。</p><p>现在再来看请求工区信息的数据包，请求工区信息时没有提供任何数据，序列化之后就只有一个空数组：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206142651531.png"></p><p>所以就不需要构造.proto文件，只需要构造好Package数据包的.proto文件即可。构造的代码在qt()函数中，经过qt()函数之后，生成POST请求数据n。</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206143134210.png"></p><p>Package需要构造的数据如下：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206143447138.png"></p><p>encode代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Writer, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">Packet$encode</span>(<span class="params">m, w</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!w) w = <span class="title class_">Writer</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">sid</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;sid&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">string</span>(m.<span class="property">sid</span>);</span><br><span class="line">    w.<span class="title function_">uint32</span>(<span class="number">16</span>).<span class="title function_">int32</span>(m.<span class="property">payloadType</span>);</span><br><span class="line">    w.<span class="title function_">uint32</span>(<span class="number">24</span>).<span class="title function_">int32</span>(m.<span class="property">cmd</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">status</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;status&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">32</span>).<span class="title function_">uint32</span>(m.<span class="property">status</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">payload</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;payload&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">42</span>).<span class="title function_">bytes</span>(m.<span class="property">payload</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">cid</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;cid&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">50</span>).<span class="title function_">string</span>(m.<span class="property">cid</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">pipeEntity</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;pipeEntity&quot;</span>))</span><br><span class="line">      types[<span class="number">6</span>].<span class="title function_">encode</span>(m.<span class="property">pipeEntity</span>, w.<span class="title function_">uint32</span>(<span class="number">58</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">versionPayloads</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">versionPayloads</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">versionPayloads</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">7</span>].<span class="title function_">encode</span>(m.<span class="property">versionPayloads</span>[i], w.<span class="title function_">uint32</span>(<span class="number">66</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">pipeEntities</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">pipeEntities</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">pipeEntities</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">8</span>].<span class="title function_">encode</span>(m.<span class="property">pipeEntities</span>[i], w.<span class="title function_">uint32</span>(<span class="number">74</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">waitRetryInterval</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;waitRetryInterval&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">80</span>).<span class="title function_">uint32</span>(m.<span class="property">waitRetryInterval</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">command</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;command&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">88</span>).<span class="title function_">int32</span>(m.<span class="property">command</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">cursor</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;cursor&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">96</span>).<span class="title function_">uint64</span>(m.<span class="property">cursor</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">compactedSids</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">compactedSids</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">compactedSids</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        w.<span class="title function_">uint32</span>(<span class="number">104</span>).<span class="title function_">int64</span>(m.<span class="property">compactedSids</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>分析请求的数据包和之前分析响应的数据包类似，请求是先创建一个Writer对象，用于保存序列化的请求数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w = <span class="title class_">Writer</span>.<span class="title function_">create</span>()</span><br></pre></td></tr></table></figure><p>接着拼接字段标识和字段类型，其中uint32(10)添加一个32bit的字段标识，string(m.sid)标识sid字段是string类型：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m.<span class="property">sid</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;sid&quot;</span>))</span><br><span class="line">  w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">string</span>(m.<span class="property">sid</span>);</span><br></pre></td></tr></table></figure><p>通过字段标识10可以得到字段编号为1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 &gt;&gt; 3 = 1</span><br></pre></td></tr></table></figure><p>这样就可以得到message Packet的第一个字段sid，同样的方法可以得到后面的其他字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto2&quot;;</span><br><span class="line"></span><br><span class="line">message Packet &#123;</span><br><span class="line">    optional string sid = 1;</span><br><span class="line">    required int32 payloadType = 2;</span><br><span class="line">    required int32 cmd = 3;</span><br><span class="line">    optional uint32 status = 4;</span><br><span class="line">    optional bytes payload = 5;</span><br><span class="line">    optional string cid = 6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，在proto2中，字段前面可以加上optional或者required来指定字段是可选还是必需，默认（不指定）是可选的；但是在 proto3 中，所有的字段都默认为必需的，不存在 <code>optional</code> 或 <code>required</code> 标识，所有字段如果未设置都会有默认值，默认值将是该类型的零值（例如，对于字符串，零值是空字符串，对于整数，零值是0），并且在编码消息时，如果字段的值为其类型的默认值，则该字段可能不会被包含在编码的消息中。</p><p>在构造请求数据时，建议使用proto2版本，因为如果使用proto3，当请求的数据中某个字段为空时，会被省略，但是这个字段又是服务端所必需的，就会产生非预期的效果，算是一个坑点。并且，可以观察到js代码中，有一些字段使用if去判断是否为空，为空就不引用该字段，如sid；但是也有一些字段直接获取，如payloadType，对于proto2，sid就是可选的，payloadType就是必需的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m.<span class="property">sid</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;sid&quot;</span>))</span><br><span class="line">     w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">string</span>(m.<span class="property">sid</span>);</span><br><span class="line">   w.<span class="title function_">uint32</span>(<span class="number">16</span>).<span class="title function_">int32</span>(m.<span class="property">payloadType</span>);</span><br></pre></td></tr></table></figure><p>这个可选还是必需其实无需和js代码一一对应，optional的字段可以是required，但是required的字段不能是optional。</p><p>构造好请求和解析的.proto文件之后，就可以使用protoc工具生成python代码，最后即可在自己的python代码中引用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.Packet_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.RequestMeetingRoomInfo_pb2</span><br><span class="line"><span class="keyword">import</span> generate_request_data</span><br><span class="line"><span class="keyword">import</span> utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取会议室建筑信息请求数据构造</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">request_buildingInfo_encode</span>():</span><br><span class="line">    request_data = &#123;</span><br><span class="line">        <span class="string">&#x27;cmd&#x27;</span>: <span class="number">1010009</span>,</span><br><span class="line">        <span class="string">&#x27;payloadType&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: <span class="built_in">bytes</span>(),</span><br><span class="line">        <span class="string">&#x27;cid&#x27;</span>: utils.generate_cid()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request_buildingInfo = pb2.Packet_pb2.Packet()</span><br><span class="line">    request_buildingInfo.cmd = request_data.get(<span class="string">&#x27;cmd&#x27;</span>)</span><br><span class="line">    request_buildingInfo.payloadType = request_data.get(<span class="string">&#x27;payloadType&#x27;</span>)</span><br><span class="line">    request_buildingInfo.payload = request_data.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    request_buildingInfo.cid = request_data.get(<span class="string">&#x27;cid&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> request_buildingInfo.SerializeToString()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.ResponseBuildingInfo_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.ResponseMeetingRoomInfo_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.Packet_pb2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析工区信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">response_buildingInfo_decode</span>(<span class="params">response_data</span>):</span><br><span class="line">    packet = pb2.Packet_pb2.Packet()</span><br><span class="line">    response_buildingInfo = pb2.ResponseBuildingInfo_pb2.ResponseBuildingInfo()</span><br><span class="line"></span><br><span class="line">    packet.ParseFromString(response_data)</span><br><span class="line">    response_buildingInfo.ParseFromString(packet.payload)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 要将floors（protobufListValue）转换为Python列表</span></span><br><span class="line">    buildingInfo = &#123;key: &#123;</span><br><span class="line">        <span class="string">&#x27;id&#x27;</span>: value.<span class="built_in">id</span>,</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: value.name,</span><br><span class="line">        <span class="string">&#x27;description&#x27;</span>: value.description,</span><br><span class="line">        <span class="string">&#x27;latitude&#x27;</span>: value.latitude,</span><br><span class="line">        <span class="string">&#x27;longitude&#x27;</span>: value.longitude,</span><br><span class="line">        <span class="string">&#x27;floors&#x27;</span>: <span class="built_in">list</span>(value.floors),</span><br><span class="line">        <span class="string">&#x27;weight&#x27;</span>: value.weight</span><br><span class="line">    &#125; <span class="keyword">for</span> key, value <span class="keyword">in</span> response_buildingInfo.building.items()&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> buildingInfo</span><br></pre></td></tr></table></figure><p>解析响应的数据包之前需要先使用Packet进行反序列化。</p><p><strong>关于cid的生成：</strong></p><p>注意到请求的数据中有一个cid字段，用于服务端区分请求数据。cid在qt()函数中生成：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206150448348.png"></p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206150603215.png" style="zoom:200%;"><p>生成cid的代码比较简单，不需要转换成python代码，直接使用execjs库执行即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generate_cid</span>():</span><br><span class="line">    script = (</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        get_cid = function() &#123;</span></span><br><span class="line"><span class="string">            return (Math.random().toString(36) + &quot;0000000000&quot;).substring(2, 2 + &quot;0000000000&quot;.length)</span></span><br><span class="line"><span class="string">        &#125;;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    x = execjs.<span class="built_in">compile</span>(script)</span><br><span class="line">    result = x.call(<span class="string">&quot;get_cid&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="获取会议室信息"><a href="#获取会议室信息" class="headerlink" title="获取会议室信息"></a>获取会议室信息</h3><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206151256875.png"></p><p>序列化请求会议室信息的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Writer, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">PullMeetingRoomsInBuildingRequest$encode</span>(<span class="params">m, w</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!w) w = <span class="title class_">Writer</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">startTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;startTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">8</span>).<span class="title function_">int64</span>(m.<span class="property">startTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">endTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;endTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">16</span>).<span class="title function_">int64</span>(m.<span class="property">endTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">buildingIds</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">buildingIds</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">buildingIds</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        w.<span class="title function_">uint32</span>(<span class="number">26</span>).<span class="title function_">string</span>(m.<span class="property">buildingIds</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">rrule</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;rrule&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">34</span>).<span class="title function_">string</span>(m.<span class="property">rrule</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">needDisabledResource</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;needDisabledResource&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">40</span>).<span class="title function_">bool</span>(m.<span class="property">needDisabledResource</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">startTimezone</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;startTimezone&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">50</span>).<span class="title function_">string</span>(m.<span class="property">startTimezone</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">meetingRoomFilter</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;meetingRoomFilter&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      types[<span class="number">6</span>].<span class="title function_">encode</span>(m.<span class="property">meetingRoomFilter</span>, w.<span class="title function_">uint32</span>(<span class="number">58</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">meetingRoomFloorFilter</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">meetingRoomFloorFilter</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">meetingRoomFloorFilter</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">7</span>]</span><br><span class="line">          .<span class="title function_">encode</span>(m.<span class="property">meetingRoomFloorFilter</span>[i], w.<span class="title function_">uint32</span>(<span class="number">66</span>).<span class="title function_">fork</span>())</span><br><span class="line">          .<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>请求会议室信息的.proto结构文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto2&quot;;</span><br><span class="line"></span><br><span class="line">message RequestMeetingRoomInfo &#123;</span><br><span class="line">    repeated string buildingIds = 3;</span><br><span class="line">    required bool needDisabledResource = 5;</span><br><span class="line">    required string startTimezone = 6;</span><br><span class="line">    repeated MeetingRoomFilter meetingRoomFilter = 7;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message MeetingRoomFilter &#123;</span><br><span class="line">    required int32 minCapacity = 1;</span><br><span class="line">    repeated string needEquipments = 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反序列化会议室信息的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Reader, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">PullMeetingRoomsInBuildingResponse$decode</span>(<span class="params">r, l</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(r <span class="keyword">instanceof</span> <span class="title class_">Reader</span>)) r = <span class="title class_">Reader</span>.<span class="title function_">create</span>(r);</span><br><span class="line">    <span class="keyword">var</span> c = l === <span class="literal">undefined</span> ? r.<span class="property">len</span> : r.<span class="property">pos</span> + l,</span><br><span class="line">      m = <span class="keyword">new</span> <span class="variable language_">this</span>.<span class="title function_">ctor</span>(),</span><br><span class="line">      k,</span><br><span class="line">      value;</span><br><span class="line">    <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c) &#123;</span><br><span class="line">      <span class="keyword">var</span> t = r.<span class="title function_">uint32</span>();</span><br><span class="line">      <span class="keyword">switch</span> (t &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">          <span class="keyword">if</span> (m.<span class="property">resources</span> === util.<span class="property">emptyObject</span>) m.<span class="property">resources</span> = &#123;&#125;;</span><br><span class="line">          <span class="keyword">var</span> c2 = r.<span class="title function_">uint32</span>() + r.<span class="property">pos</span>;</span><br><span class="line">          k = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          value = <span class="literal">null</span>;</span><br><span class="line">          <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c2) &#123;</span><br><span class="line">            <span class="keyword">var</span> tag2 = r.<span class="title function_">uint32</span>();</span><br><span class="line">            <span class="keyword">switch</span> (tag2 &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                k = r.<span class="title function_">string</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                value = types[<span class="number">0</span>].<span class="title function_">decode</span>(r, r.<span class="title function_">uint32</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="attr">default</span>:</span><br><span class="line">                r.<span class="title function_">skipType</span>(tag2 &amp; <span class="number">7</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          m.<span class="property">resources</span>[k] = value;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">          r.<span class="title function_">skipType</span>(t &amp; <span class="number">7</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Reader, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">CalendarResource$decode</span>(<span class="params">r, l</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(r <span class="keyword">instanceof</span> <span class="title class_">Reader</span>)) r = <span class="title class_">Reader</span>.<span class="title function_">create</span>(r);</span><br><span class="line">    <span class="keyword">var</span> c = l === <span class="literal">undefined</span> ? r.<span class="property">len</span> : r.<span class="property">pos</span> + l,</span><br><span class="line">      m = <span class="keyword">new</span> <span class="variable language_">this</span>.<span class="title function_">ctor</span>(),</span><br><span class="line">      k,</span><br><span class="line">      value;</span><br><span class="line">    <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c) &#123;</span><br><span class="line">      <span class="keyword">var</span> t = r.<span class="title function_">uint32</span>();</span><br><span class="line">      <span class="keyword">switch</span> (t &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">          m.<span class="property">id</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">          m.<span class="property">calendarId</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">          m.<span class="property">name</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">          m.<span class="property">type</span> = r.<span class="title function_">int32</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">          m.<span class="property">status</span> = r.<span class="title function_">int32</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">          m.<span class="property">buildingId</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">          m.<span class="property">description</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">          m.<span class="property">capacity</span> = r.<span class="title function_">int32</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">          m.<span class="property">floorName</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">          m.<span class="property">category</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">          m.<span class="property">isDeleted</span> = r.<span class="title function_">bool</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">          m.<span class="property">isExternal</span> = r.<span class="title function_">bool</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">          m.<span class="property">weight</span> = r.<span class="title function_">int32</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">          m.<span class="property">tenantId</span> = r.<span class="title function_">string</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">          m.<span class="property">isDisabled</span> = r.<span class="title function_">bool</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">          m.<span class="property">resourceSchema</span> = r.<span class="title function_">bytes</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">          m.<span class="property">schemaExtraData</span> = r.<span class="title function_">bytes</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">          <span class="keyword">if</span> (!(m.<span class="property">equipmentNames</span> &amp;&amp; m.<span class="property">equipmentNames</span>.<span class="property">length</span>))</span><br><span class="line">            m.<span class="property">equipmentNames</span> = [];</span><br><span class="line">          m.<span class="property">equipmentNames</span>.<span class="title function_">push</span>(r.<span class="title function_">string</span>());</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">19</span>:</span><br><span class="line">          <span class="keyword">if</span> (m.<span class="property">equipmentNameMap</span> === util.<span class="property">emptyObject</span>) m.<span class="property">equipmentNameMap</span> = &#123;&#125;;</span><br><span class="line">          <span class="keyword">var</span> c2 = r.<span class="title function_">uint32</span>() + r.<span class="property">pos</span>;</span><br><span class="line">          k = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          <span class="keyword">while</span> (r.<span class="property">pos</span> &lt; c2) &#123;</span><br><span class="line">            <span class="keyword">var</span> tag2 = r.<span class="title function_">uint32</span>();</span><br><span class="line">            <span class="keyword">switch</span> (tag2 &gt;&gt;&gt; <span class="number">3</span>) &#123;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                k = r.<span class="title function_">string</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                value = r.<span class="title function_">string</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="attr">default</span>:</span><br><span class="line">                r.<span class="title function_">skipType</span>(tag2 &amp; <span class="number">7</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          m.<span class="property">equipmentNameMap</span>[k] = value;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">          r.<span class="title function_">skipType</span>(t &amp; <span class="number">7</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!m.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;id&quot;</span>))</span><br><span class="line">      <span class="keyword">throw</span> util.<span class="title class_">ProtocolError</span>(<span class="string">&quot;missing required &#x27;id&#x27;&quot;</span>, &#123; <span class="attr">instance</span>: m &#125;);</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>解析会议室信息的.proto结构文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line"></span><br><span class="line">message ResponseMeetingRoomInfo &#123;</span><br><span class="line">    map&lt;string, MeetingRoomInfo&gt; meetingRoom = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message MeetingRoomInfo &#123;</span><br><span class="line">    string id = 1;</span><br><span class="line">    string calendarId = 2;</span><br><span class="line">    string name = 3;</span><br><span class="line">    int32 type = 4;</span><br><span class="line">    int32 status = 5;</span><br><span class="line">    string buildingId = 6;</span><br><span class="line">    string description = 7;</span><br><span class="line">    int32 capacity = 8;</span><br><span class="line">    string floorName = 9;</span><br><span class="line">    string category = 10;</span><br><span class="line">    bool isDeleted = 11;</span><br><span class="line">    bool isExternal = 12;</span><br><span class="line">    int32 weight = 13;</span><br><span class="line">    string tenantId = 14;</span><br><span class="line">    bool isDisabled = 15;</span><br><span class="line">    bytes resourceSchema = 16;</span><br><span class="line">    bytes schemaExtraData = 17;</span><br><span class="line">    string equipmentNames = 18;</span><br><span class="line">    map&lt;string, string&gt; equipmentNameMap = 19;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.Packet_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.RequestMeetingRoomInfo_pb2</span><br><span class="line"><span class="keyword">import</span> generate_request_data</span><br><span class="line"><span class="keyword">import</span> utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取会议室信息请求数据构造</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">request_meetingRoomInfo_encode</span>(<span class="params">buildingIds</span>):</span><br><span class="line">    meetingRoomInfo_request = pb2.RequestMeetingRoomInfo_pb2.RequestMeetingRoomInfo()</span><br><span class="line">    <span class="comment"># 会议室数据</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> buildingIds:</span><br><span class="line">        meetingRoomInfo_request.buildingIds.append(i)</span><br><span class="line">    meetingRoomInfo_request.buildingIds.extend(buildingIds)</span><br><span class="line">    meetingRoomInfo_request.needDisabledResource = <span class="literal">False</span></span><br><span class="line">    meetingRoomInfo_request.startTimezone = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    meetingRoomFilter = meetingRoomInfo_request.meetingRoomFilter.add()</span><br><span class="line">    meetingRoomFilter.minCapacity = <span class="number">0</span></span><br><span class="line">    meetingRoomFilter.needEquipments.extend([])</span><br><span class="line">    payload = meetingRoomInfo_request.SerializeToString()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># packet请求数据</span></span><br><span class="line">    request_data = &#123;</span><br><span class="line">        <span class="string">&#x27;cmd&#x27;</span>: <span class="number">1010010</span>,</span><br><span class="line">        <span class="string">&#x27;payloadType&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: payload,</span><br><span class="line">        <span class="string">&#x27;cid&#x27;</span>: utils.generate_cid()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request_meetingInfo = pb2.Packet_pb2.Packet()</span><br><span class="line">    request_meetingInfo.cmd = request_data.get(<span class="string">&#x27;cmd&#x27;</span>)</span><br><span class="line">    request_meetingInfo.payloadType = request_data.get(<span class="string">&#x27;payloadType&#x27;</span>)</span><br><span class="line">    request_meetingInfo.payload = request_data.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    request_meetingInfo.cid = request_data.get(<span class="string">&#x27;cid&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> request_meetingInfo.SerializeToString()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.ResponseBuildingInfo_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.ResponseMeetingRoomInfo_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.Packet_pb2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">response_meetingRoomInfo_decode</span>(<span class="params">response_data</span>):</span><br><span class="line">    packet = pb2.Packet_pb2.Packet()</span><br><span class="line">    response_meetingRoomInfo = pb2.ResponseMeetingRoomInfo_pb2.ResponseMeetingRoomInfo()</span><br><span class="line"></span><br><span class="line">    packet.ParseFromString(response_data)</span><br><span class="line">    response_meetingRoomInfo.ParseFromString(packet.payload)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将bytes数据类型转换成base64, map数据转换成python字典</span></span><br><span class="line">    meetingRoomInfo = &#123;key: &#123;</span><br><span class="line">        <span class="string">&#x27;id&#x27;</span>: value.<span class="built_in">id</span>,</span><br><span class="line">        <span class="string">&#x27;calendarId&#x27;</span>: value.calendarId,</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: value.name,</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: value.<span class="built_in">type</span>,</span><br><span class="line">        <span class="string">&#x27;status&#x27;</span>: value.status,</span><br><span class="line">        <span class="string">&#x27;buildingId&#x27;</span>: value.buildingId,</span><br><span class="line">        <span class="string">&#x27;description&#x27;</span>: value.description,</span><br><span class="line">        <span class="string">&#x27;capacity&#x27;</span>: value.capacity,</span><br><span class="line">        <span class="string">&#x27;floorName&#x27;</span>: value.floorName,</span><br><span class="line">        <span class="string">&#x27;category&#x27;</span>: value.category,</span><br><span class="line">        <span class="string">&#x27;isDeleted&#x27;</span>: value.isDeleted,</span><br><span class="line">        <span class="string">&#x27;isExternal&#x27;</span>: value.isExternal,</span><br><span class="line">        <span class="string">&#x27;weight&#x27;</span>: value.weight,</span><br><span class="line">        <span class="string">&#x27;tenantId&#x27;</span>: value.tenantId,</span><br><span class="line">        <span class="string">&#x27;isDisabled&#x27;</span>: value.isDisabled,</span><br><span class="line">        <span class="string">&#x27;resourceSchema&#x27;</span>: base64.b64encode(value.resourceSchema).decode(<span class="string">&#x27;utf-8&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;schemaExtraData&#x27;</span>: base64.b64encode(value.schemaExtraData).decode(<span class="string">&#x27;utf-8&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;equipmentNames&#x27;</span>: value.equipmentNames,</span><br><span class="line">        <span class="string">&#x27;equipmentNameMap&#x27;</span>: <span class="built_in">dict</span>(value.equipmentNameMap)</span><br><span class="line">    &#125; <span class="keyword">for</span> key, value <span class="keyword">in</span> response_meetingRoomInfo.meetingRoom.items()&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> meetingRoomInfo</span><br></pre></td></tr></table></figure><p>关于python代码中一些要注意的点：</p><ol><li>可以通过meetingRoomInfo_request.buildingIds.extend(buildingIds)给protobuf字段赋值为数组；</li><li>反序列化protobuf数据时，对于protobuf中的列表和字典字段，需要使用list()和dict()函数转换成python列表和字典。</li></ol><h3 id="保存-预定会议室信息"><a href="#保存-预定会议室信息" class="headerlink" title="保存&#x2F;预定会议室信息"></a>保存&#x2F;预定会议室信息</h3><p>在之前的分析过程中，在发送请求的qt()函数打了断点，点击保存会议室会断下来，查看函数调用栈，可以看到序列化请求数据的位置：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206153124635.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206153832985.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206153926012.png"></p><p>序列化的js代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Writer, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">CreateEventRequest$encode</span>(<span class="params">m, w</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!w) w = <span class="title class_">Writer</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">event</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;event&quot;</span>))</span><br><span class="line">      types[<span class="number">0</span>].<span class="title function_">encode</span>(m.<span class="property">event</span>, w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">notificationType</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;notificationType&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">16</span>).<span class="title function_">int32</span>(m.<span class="property">notificationType</span>);</span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>序列化event：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Writer, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">WebCalendarEvent$encode</span>(<span class="params">m, w</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!w) w = <span class="title class_">Writer</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">id</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;id&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">string</span>(m.<span class="property">id</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">key</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;key&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">18</span>).<span class="title function_">string</span>(m.<span class="property">key</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">originalTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;originalTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">24</span>).<span class="title function_">int64</span>(m.<span class="property">originalTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">calendarId</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;calendarId&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">34</span>).<span class="title function_">string</span>(m.<span class="property">calendarId</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">organizerCalendarId</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;organizerCalendarId&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">42</span>).<span class="title function_">string</span>(m.<span class="property">organizerCalendarId</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">creatorCalendarId</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;creatorCalendarId&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">50</span>).<span class="title function_">string</span>(m.<span class="property">creatorCalendarId</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">successorCalendarId</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;successorCalendarId&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">58</span>).<span class="title function_">string</span>(m.<span class="property">successorCalendarId</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">originalEventKey</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;originalEventKey&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">66</span>).<span class="title function_">string</span>(m.<span class="property">originalEventKey</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">originalIsAllDay</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;originalIsAllDay&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">72</span>).<span class="title function_">bool</span>(m.<span class="property">originalIsAllDay</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">isFree</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isFree&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">80</span>).<span class="title function_">bool</span>(m.<span class="property">isFree</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">isAllDay</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isAllDay&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">88</span>).<span class="title function_">bool</span>(m.<span class="property">isAllDay</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">isCrossTenant</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isCrossTenant&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">96</span>).<span class="title function_">bool</span>(m.<span class="property">isCrossTenant</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">isDeleted</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isDeleted&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">104</span>).<span class="title function_">bool</span>(m.<span class="property">isDeleted</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">lastDate</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;lastDate&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">112</span>).<span class="title function_">int64</span>(m.<span class="property">lastDate</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">source</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;source&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">120</span>).<span class="title function_">int32</span>(m.<span class="property">source</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">color</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;color&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">128</span>).<span class="title function_">int32</span>(m.<span class="property">color</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">visibility</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;visibility&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">136</span>).<span class="title function_">int32</span>(m.<span class="property">visibility</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">version</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;version&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">144</span>).<span class="title function_">int64</span>(m.<span class="property">version</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">status</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;status&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">152</span>).<span class="title function_">int32</span>(m.<span class="property">status</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">rrule</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;rrule&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">162</span>).<span class="title function_">string</span>(m.<span class="property">rrule</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">guestCanInvite</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;guestCanInvite&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">168</span>).<span class="title function_">bool</span>(m.<span class="property">guestCanInvite</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">guestCanSeeOtherGuests</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;guestCanSeeOtherGuests&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">176</span>).<span class="title function_">bool</span>(m.<span class="property">guestCanSeeOtherGuests</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">guestCanModify</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;guestCanModify&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">184</span>).<span class="title function_">bool</span>(m.<span class="property">guestCanModify</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">selfAttendeeStatus</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;selfAttendeeStatus&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">192</span>).<span class="title function_">int32</span>(m.<span class="property">selfAttendeeStatus</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">startTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;startTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">200</span>).<span class="title function_">int64</span>(m.<span class="property">startTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">startTimezone</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;startTimezone&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">210</span>).<span class="title function_">string</span>(m.<span class="property">startTimezone</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">endTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;endTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">216</span>).<span class="title function_">int64</span>(m.<span class="property">endTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">endTimezone</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;endTimezone&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">226</span>).<span class="title function_">string</span>(m.<span class="property">endTimezone</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">summary</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;summary&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">234</span>).<span class="title function_">string</span>(m.<span class="property">summary</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">description</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;description&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">242</span>).<span class="title function_">string</span>(m.<span class="property">description</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">docsDescription</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;docsDescription&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">250</span>).<span class="title function_">string</span>(m.<span class="property">docsDescription</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">locations</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">locations</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">locations</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">31</span>].<span class="title function_">encode</span>(m.<span class="property">locations</span>[i], w.<span class="title function_">uint32</span>(<span class="number">258</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">attendees</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">attendees</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">attendees</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">32</span>].<span class="title function_">encode</span>(m.<span class="property">attendees</span>[i], w.<span class="title function_">uint32</span>(<span class="number">266</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">reminders</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">reminders</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">reminders</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">33</span>].<span class="title function_">encode</span>(m.<span class="property">reminders</span>[i], w.<span class="title function_">uint32</span>(<span class="number">274</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">createTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;createTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">280</span>).<span class="title function_">int64</span>(m.<span class="property">createTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">updateTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;updateTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">288</span>).<span class="title function_">int64</span>(m.<span class="property">updateTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">organizer</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;organizer&quot;</span>))</span><br><span class="line">      types[<span class="number">36</span>].<span class="title function_">encode</span>(m.<span class="property">organizer</span>, w.<span class="title function_">uint32</span>(<span class="number">298</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">creator</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;creator&quot;</span>))</span><br><span class="line">      types[<span class="number">37</span>].<span class="title function_">encode</span>(m.<span class="property">creator</span>, w.<span class="title function_">uint32</span>(<span class="number">306</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">successor</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;successor&quot;</span>))</span><br><span class="line">      types[<span class="number">38</span>].<span class="title function_">encode</span>(m.<span class="property">successor</span>, w.<span class="title function_">uint32</span>(<span class="number">314</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">type</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;type&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">320</span>).<span class="title function_">int32</span>(m.<span class="property">type</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">attachments</span> != <span class="literal">null</span> &amp;&amp; m.<span class="property">attachments</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; m.<span class="property">attachments</span>.<span class="property">length</span>; ++i)</span><br><span class="line">        types[<span class="number">40</span>].<span class="title function_">encode</span>(m.<span class="property">attachments</span>[i], w.<span class="title function_">uint32</span>(<span class="number">330</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">attendeeInfo</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;attendeeInfo&quot;</span>))</span><br><span class="line">      types[<span class="number">41</span>].<span class="title function_">encode</span>(m.<span class="property">attendeeInfo</span>, w.<span class="title function_">uint32</span>(<span class="number">338</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">schema</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;schema&quot;</span>))</span><br><span class="line">      types[<span class="number">42</span>].<span class="title function_">encode</span>(m.<span class="property">schema</span>, w.<span class="title function_">uint32</span>(<span class="number">346</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">attendeeSource</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;attendeeSource&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">352</span>).<span class="title function_">int32</span>(m.<span class="property">attendeeSource</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">meetingMinuteUrl</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;meetingMinuteUrl&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">362</span>).<span class="title function_">string</span>(m.<span class="property">meetingMinuteUrl</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">inviteOperatorId</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;inviteOperatorId&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">370</span>).<span class="title function_">string</span>(m.<span class="property">inviteOperatorId</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">videoMeeting</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;videoMeeting&quot;</span>))</span><br><span class="line">      types[<span class="number">46</span>].<span class="title function_">encode</span>(m.<span class="property">videoMeeting</span>, w.<span class="title function_">uint32</span>(<span class="number">378</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">schemaV2</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;schemaV2&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">386</span>).<span class="title function_">bytes</span>(m.<span class="property">schemaV2</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">videoConfig</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;videoConfig&quot;</span>))</span><br><span class="line">      types[<span class="number">48</span>].<span class="title function_">encode</span>(m.<span class="property">videoConfig</span>, w.<span class="title function_">uint32</span>(<span class="number">394</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">encryptionInfo</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;encryptionInfo&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      types[<span class="number">49</span>].<span class="title function_">encode</span>(m.<span class="property">encryptionInfo</span>, w.<span class="title function_">uint32</span>(<span class="number">402</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">isWebinar</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isWebinar&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">408</span>).<span class="title function_">bool</span>(m.<span class="property">isWebinar</span>);</span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>构造Location：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Writer, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">CalendarEventLocation$encode</span>(<span class="params">m, w</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!w) w = <span class="title class_">Writer</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">name</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;name&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">string</span>(m.<span class="property">name</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">address</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;address&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">18</span>).<span class="title function_">string</span>(m.<span class="property">address</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">type</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;type&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">24</span>).<span class="title function_">int32</span>(m.<span class="property">type</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">latitude</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;latitude&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">37</span>).<span class="title function_">float</span>(m.<span class="property">latitude</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">longitude</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;longitude&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">45</span>).<span class="title function_">float</span>(m.<span class="property">longitude</span>);</span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>构造Attendee：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">anonymous</span>(<span class="params">Writer, types, util</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">WebCalendarEventAttendee$encode</span>(<span class="params">m, w</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!w) w = <span class="title class_">Writer</span>.<span class="title function_">create</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">id</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;id&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">10</span>).<span class="title function_">string</span>(m.<span class="property">id</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">key</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;key&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">18</span>).<span class="title function_">string</span>(m.<span class="property">key</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">originalTime</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;originalTime&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">24</span>).<span class="title function_">int64</span>(m.<span class="property">originalTime</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">displayName</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;displayName&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">34</span>).<span class="title function_">string</span>(m.<span class="property">displayName</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">attendeeCalendarId</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;attendeeCalendarId&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">42</span>).<span class="title function_">string</span>(m.<span class="property">attendeeCalendarId</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">isOrganizer</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isOrganizer&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">48</span>).<span class="title function_">bool</span>(m.<span class="property">isOrganizer</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">isOptional</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;isOptional&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">56</span>).<span class="title function_">bool</span>(m.<span class="property">isOptional</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">status</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;status&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">64</span>).<span class="title function_">int32</span>(m.<span class="property">status</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">inviterCalendarId</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;inviterCalendarId&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">74</span>).<span class="title function_">string</span>(m.<span class="property">inviterCalendarId</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">avatarKey</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;avatarKey&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">82</span>).<span class="title function_">string</span>(m.<span class="property">avatarKey</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">category</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;category&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">88</span>).<span class="title function_">int32</span>(m.<span class="property">category</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">fsUnit</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;fsUnit&quot;</span>))</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">98</span>).<span class="title function_">string</span>(m.<span class="property">fsUnit</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">attendeeSchema</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;attendeeSchema&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">106</span>).<span class="title function_">bytes</span>(m.<span class="property">attendeeSchema</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">schemaExtraData</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;schemaExtraData&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      w.<span class="title function_">uint32</span>(<span class="number">114</span>).<span class="title function_">bytes</span>(m.<span class="property">schemaExtraData</span>);</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">user</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;user&quot;</span>))</span><br><span class="line">      types[<span class="number">14</span>].<span class="title function_">encode</span>(m.<span class="property">user</span>, w.<span class="title function_">uint32</span>(<span class="number">802</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">group</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;group&quot;</span>))</span><br><span class="line">      types[<span class="number">15</span>].<span class="title function_">encode</span>(m.<span class="property">group</span>, w.<span class="title function_">uint32</span>(<span class="number">810</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (m.<span class="property">resource</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;resource&quot;</span>))</span><br><span class="line">      types[<span class="number">16</span>].<span class="title function_">encode</span>(m.<span class="property">resource</span>, w.<span class="title function_">uint32</span>(<span class="number">818</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      m.<span class="property">thirdPartyUser</span> != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;thirdPartyUser&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">      types[<span class="number">17</span>].<span class="title function_">encode</span>(m.<span class="property">thirdPartyUser</span>, w.<span class="title function_">uint32</span>(<span class="number">826</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">    <span class="keyword">return</span> w;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>.proto文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto2&quot;;</span><br><span class="line"></span><br><span class="line">message Locations &#123;</span><br><span class="line">    required string name = 1;</span><br><span class="line">    required string address = 2;</span><br><span class="line">    required float latitude = 4;</span><br><span class="line">    required float longitude = 5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Attendees &#123;</span><br><span class="line">    required string id = 1;</span><br><span class="line">    required string key = 2;</span><br><span class="line">    required int64 originalTime = 3;</span><br><span class="line">    required string displayName = 4;</span><br><span class="line">    required string attendeeCalendarId = 5;</span><br><span class="line">    required bool isOrganizer = 6;</span><br><span class="line">    required bool isOptional = 7;</span><br><span class="line">    required int32 status = 8;</span><br><span class="line">    required string inviterCalendarId = 9;</span><br><span class="line">    required string avatarKey = 10;</span><br><span class="line">    required int32 category = 11;</span><br><span class="line">    repeated User user = 100;</span><br><span class="line">    repeated Resource resource = 102;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message User &#123;</span><br><span class="line">    required string userId = 1;</span><br><span class="line">    required string tenantId = 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Resource &#123;</span><br><span class="line">    required string tenantId = 1;</span><br><span class="line">    required bool isDisabled = 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message Reminders &#123;</span><br><span class="line">    required string calendarEventId = 1;</span><br><span class="line">    required int32 minutes = 2;</span><br><span class="line">    required int32 method = 3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message Event &#123;</span><br><span class="line">    required string id = 1;</span><br><span class="line">    required string key = 2;</span><br><span class="line">    required int64 originalTime = 3;</span><br><span class="line">    required string calendarId = 4;</span><br><span class="line">    required string organizerCalendarId = 5;</span><br><span class="line">    required string creatorCalendarId = 6;</span><br><span class="line">    required string successorCalendarId = 7;</span><br><span class="line">    required string originalEventKey = 8;</span><br><span class="line">    required bool originalIsAllDay = 9;</span><br><span class="line">    required bool isFree = 10;</span><br><span class="line">    required bool isAllDay = 11;</span><br><span class="line">    required bool isCrossTenant = 12;</span><br><span class="line">    required int32 source = 15;</span><br><span class="line">    required int32 color = 16;</span><br><span class="line">    required int32 visibility = 17;</span><br><span class="line">    required int64 version = 18;</span><br><span class="line">    required string rrule = 20;</span><br><span class="line">    required bool guestCanInvite = 21;</span><br><span class="line">    required bool guestCanSeeOtherGuests = 22;</span><br><span class="line">    required bool guestCanModify = 23;</span><br><span class="line">    required int32 selfAttendeeStatus = 24;</span><br><span class="line">    required int64 startTime = 25;</span><br><span class="line">    required string startTimezone = 26;</span><br><span class="line">    required int64 endTime = 27;</span><br><span class="line">    required string endTimezone = 28;</span><br><span class="line">    required string summary = 29;</span><br><span class="line">    required string description = 30;</span><br><span class="line">    required string docsDescription = 31;</span><br><span class="line"></span><br><span class="line">    repeated Locations locations = 32;</span><br><span class="line">    repeated Attendees attendees = 33;</span><br><span class="line">    repeated Reminders reminders = 34;</span><br><span class="line"></span><br><span class="line">    required int64 createTime = 35;</span><br><span class="line">    required int64 updateTime = 36;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message CreateEventRequest &#123;</span><br><span class="line">    required Event event = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在调试过程中看到请求的数据，发现Attendees中既有User又有Resource：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">attendees<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;originalTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;attendeeCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7251xxx921&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isOrganizer&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isOptional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ACCEPT&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;inviterCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatarKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v2_cxxxc899d71bg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;USER&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7251xxx26&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tenantId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;687xxx0322&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;originalTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1层-D1xxxD座&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;attendeeCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7002xxx5713&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isOrganizer&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isOptional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NEEDS_ACTION&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;inviterCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatarKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RESOURCE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;tenantId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;687xxx322&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isDisabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>根据js代码，只需按照之前的规则写好User和Resource字段即可，注意user的字段号是100（802 &gt;&gt; 3 &#x3D; 100），resource的字段号是102（818 &gt;&gt; 3 &#x3D; 102），还需要注意，在attendee中，user和resource只出现其中一个，另一个不出现，所以在User和Resource字段之前需要加上repeated关键字：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m.<span class="property">user</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;user&quot;</span>))</span><br><span class="line">     types[<span class="number">14</span>].<span class="title function_">encode</span>(m.<span class="property">user</span>, w.<span class="title function_">uint32</span>(<span class="number">802</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">   <span class="keyword">if</span> (m.<span class="property">group</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;group&quot;</span>))</span><br><span class="line">     types[<span class="number">15</span>].<span class="title function_">encode</span>(m.<span class="property">group</span>, w.<span class="title function_">uint32</span>(<span class="number">810</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br><span class="line">   <span class="keyword">if</span> (m.<span class="property">resource</span> != <span class="literal">null</span> &amp;&amp; <span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(m, <span class="string">&quot;resource&quot;</span>))</span><br><span class="line">     types[<span class="number">16</span>].<span class="title function_">encode</span>(m.<span class="property">resource</span>, w.<span class="title function_">uint32</span>(<span class="number">818</span>).<span class="title function_">fork</span>()).<span class="title function_">ldelim</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repeated User user = 100;</span><br><span class="line">repeated Resource resource = 102;</span><br></pre></td></tr></table></figure><p><strong>python代码：</strong></p><p>构造Package：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.Packet_pb2</span><br><span class="line"><span class="keyword">import</span> pb2.RequestMeetingRoomInfo_pb2</span><br><span class="line"><span class="keyword">import</span> generate_request_data</span><br><span class="line"><span class="keyword">import</span> utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存会议室请求数据构造</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">request_saveMeetting_encode</span>(<span class="params">meetingInfo</span>):</span><br><span class="line">    payload = generate_request_data.CreateEventRequest_encode(meetingInfo)</span><br><span class="line"></span><br><span class="line">    packet_data = &#123;</span><br><span class="line">        <span class="string">&#x27;cmd&#x27;</span>: <span class="number">1002003</span>,</span><br><span class="line">        <span class="string">&#x27;payloadType&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;payload&#x27;</span>: payload,</span><br><span class="line">        <span class="string">&#x27;cid&#x27;</span>: utils.generate_cid()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    packet_request = pb2.Packet_pb2.Packet()</span><br><span class="line">    packet_request.cmd = packet_data.get(<span class="string">&#x27;cmd&#x27;</span>)</span><br><span class="line">    packet_request.payloadType = packet_data.get(<span class="string">&#x27;payloadType&#x27;</span>)</span><br><span class="line">    packet_request.payload = packet_data.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    packet_request.cid = packet_data.get(<span class="string">&#x27;cid&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> packet_request.SerializeToString()</span><br></pre></td></tr></table></figure><p>构造payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pb2.CreateEventRequest_pb2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CreateEventRequest_encode</span>(<span class="params">data</span>):</span><br><span class="line">    event_request = pb2.CreateEventRequest_pb2.CreateEventRequest()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;event&#x27;</span> <span class="keyword">in</span> data:</span><br><span class="line">        event_request_event = event_request.event</span><br><span class="line">        <span class="built_in">print</span>(event_request_event)</span><br><span class="line">        WebCalendarEvent_encode(data.get(<span class="string">&#x27;event&#x27;</span>), event_request_event)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;notificationType&#x27;</span> <span class="keyword">in</span> data:</span><br><span class="line">        event_request.notificationType = data.get(<span class="string">&#x27;notificationType&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 序列化，将message转换为bytes</span></span><br><span class="line">    <span class="keyword">return</span> event_request.SerializeToString()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">WebCalendarEvent_encode</span>(<span class="params">event, event_request_event</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;id&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.<span class="built_in">id</span> = event.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;key&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.key = event.get(<span class="string">&#x27;key&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;originalTime&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.originalTime = event.get(<span class="string">&#x27;originalTime&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;calendarId&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.calendarId = event.get(<span class="string">&#x27;calendarId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;organizerCalendarId&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.organizerCalendarId = event.get(<span class="string">&#x27;organizerCalendarId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;creatorCalendarId&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.creatorCalendarId = event.get(<span class="string">&#x27;creatorCalendarId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;successorCalendarId&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.successorCalendarId = event.get(<span class="string">&#x27;successorCalendarId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;originalEventKey&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.originalEventKey = event.get(<span class="string">&#x27;originalEventKey&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;originalIsAllDay&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.originalIsAllDay = event.get(<span class="string">&#x27;originalIsAllDay&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isFree&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.isFree = event.get(<span class="string">&#x27;isFree&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isAllDay&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.isAllDay = event.get(<span class="string">&#x27;isAllDay&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isCrossTenant&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.isCrossTenant = event.get(<span class="string">&#x27;isCrossTenant&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isDeleted&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.isDeleted = event.get(<span class="string">&#x27;isDeleted&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;lastDate&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.lastDate = event.get(<span class="string">&#x27;lastDate&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;source&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.source = event.get(<span class="string">&#x27;source&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;color&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.color = event.get(<span class="string">&#x27;color&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;visibility&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.visibility = event.get(<span class="string">&#x27;visibility&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;version&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.version = event.get(<span class="string">&#x27;version&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;status&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.status = event.get(<span class="string">&#x27;status&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;rrule&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.rrule = event.get(<span class="string">&#x27;rrule&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;guestCanInvite&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.guestCanInvite = event.get(<span class="string">&#x27;guestCanInvite&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;guestCanSeeOtherGuests&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.guestCanSeeOtherGuests = event.get(<span class="string">&#x27;guestCanSeeOtherGuests&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;guestCanModify&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.guestCanModify = event.get(<span class="string">&#x27;guestCanModify&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;selfAttendeeStatus&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.selfAttendeeStatus = event.get(<span class="string">&#x27;selfAttendeeStatus&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;startTime&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.startTime = event.get(<span class="string">&#x27;startTime&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;startTimezone&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.startTimezone = event.get(<span class="string">&#x27;startTimezone&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;endTime&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.endTime = event.get(<span class="string">&#x27;endTime&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;endTimezone&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.endTimezone = event.get(<span class="string">&#x27;endTimezone&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;summary&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.summary = event.get(<span class="string">&#x27;summary&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;description&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.description = event.get(<span class="string">&#x27;description&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;docsDescription&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.docsDescription = event.get(<span class="string">&#x27;docsDescription&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;locations&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        <span class="keyword">for</span> location <span class="keyword">in</span> event.get(<span class="string">&#x27;locations&#x27;</span>):</span><br><span class="line">            event_request_event_location = event_request_event.locations.add()</span><br><span class="line">            CalendarEventLocation_encode(location, event_request_event_location)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;attendees&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        <span class="keyword">for</span> attende <span class="keyword">in</span> event.get(<span class="string">&#x27;attendees&#x27;</span>):</span><br><span class="line">            event_request_event_attende = event_request_event.attendees.add()</span><br><span class="line">            WebCalendarEventAttendee_encode(attende, event_request_event_attende)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;reminders&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        <span class="keyword">for</span> reminder <span class="keyword">in</span> event.get(<span class="string">&#x27;reminders&#x27;</span>):</span><br><span class="line">            event_request_event_reminder = event_request_event.reminders.add()</span><br><span class="line">            Reminder_encode(reminder, event_request_event_reminder)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;createTime&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.createTime = event.get(<span class="string">&#x27;createTime&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;updateTime&#x27;</span> <span class="keyword">in</span> event:</span><br><span class="line">        event_request_event.updateTime = event.get(<span class="string">&#x27;updateTime&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CalendarEventLocation_encode</span>(<span class="params">location, event_request_event_location</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> location:</span><br><span class="line">        event_request_event_location.name = location.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;address&#x27;</span> <span class="keyword">in</span> location:</span><br><span class="line">        event_request_event_location.address = location.get(<span class="string">&#x27;address&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;type&#x27;</span> <span class="keyword">in</span> location:</span><br><span class="line">        event_request_event_location.<span class="built_in">type</span> = location.get(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;latitude&#x27;</span> <span class="keyword">in</span> location:</span><br><span class="line">        event_request_event_location.latitude = location.get(<span class="string">&#x27;latitude&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;longitude&#x27;</span> <span class="keyword">in</span> location:</span><br><span class="line">        event_request_event_location.longitude = location.get(<span class="string">&#x27;longitude&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">WebCalendarEventAttendee_encode</span>(<span class="params">attende, event_request_event_attende</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;id&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.<span class="built_in">id</span> = attende.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;key&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.key = attende.get(<span class="string">&#x27;key&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;originalTime&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.originalTime = <span class="built_in">int</span>(attende.get(<span class="string">&#x27;originalTime&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;displayName&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.displayName = attende.get(<span class="string">&#x27;displayName&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;attendeeCalendarId&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.attendeeCalendarId = attende.get(<span class="string">&#x27;attendeeCalendarId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isOrganizer&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.isOrganizer = attende.get(<span class="string">&#x27;isOrganizer&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isOptional&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.isOptional = attende.get(<span class="string">&#x27;isOptional&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;status&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.status = attende.get(<span class="string">&#x27;status&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;inviterCalendarId&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.inviterCalendarId = attende.get(<span class="string">&#x27;inviterCalendarId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;avatarKey&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.avatarKey = attende.get(<span class="string">&#x27;avatarKey&#x27;</span>)</span><br><span class="line">    <span class="comment"># category类型是int32</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;category&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.category = attende.get(<span class="string">&#x27;category&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;fsUnit&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.fsUnit = attende.get(<span class="string">&#x27;fsUnit&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;attendeeSchema&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.attendeeSchema = attende.get(<span class="string">&#x27;attendeeSchema&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;schemaExtraData&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende.schemaExtraData = attende.get(<span class="string">&#x27;schemaExtraData&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende_user = event_request_event_attende.user.add()</span><br><span class="line">        User_encode(attende.get(<span class="string">&#x27;user&#x27;</span>), event_request_event_attende_user)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;resource&#x27;</span> <span class="keyword">in</span> attende:</span><br><span class="line">        event_request_event_attende_resource = event_request_event_attende.resource.add()</span><br><span class="line">        Resource_encode(attende.get(<span class="string">&#x27;resource&#x27;</span>), event_request_event_attende_resource)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">User_encode</span>(<span class="params">user, event_request_event_attende_user</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;userId&#x27;</span> <span class="keyword">in</span> user:</span><br><span class="line">        event_request_event_attende_user.userId = user.get(<span class="string">&#x27;userId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;tenantId&#x27;</span> <span class="keyword">in</span> user:</span><br><span class="line">        event_request_event_attende_user.tenantId = user.get(<span class="string">&#x27;tenantId&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Resource_encode</span>(<span class="params">resource, event_request_event_attende_resource</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;tenantId&#x27;</span> <span class="keyword">in</span> resource:</span><br><span class="line">        event_request_event_attende_resource.tenantId = resource.get(<span class="string">&#x27;tenantId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;isDisabled&#x27;</span> <span class="keyword">in</span> resource:</span><br><span class="line">        event_request_event_attende_resource.isDisabled = resource.get(<span class="string">&#x27;isDisabled&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Reminder_encode</span>(<span class="params">reminder, event_request_event_reminder</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;calendarEventId&#x27;</span> <span class="keyword">in</span> reminder:</span><br><span class="line">        event_request_event_reminder.calendarEventId = reminder.get(<span class="string">&#x27;calendarEventId&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;minutes&#x27;</span> <span class="keyword">in</span> reminder:</span><br><span class="line">        event_request_event_reminder.minutes = reminder.get(<span class="string">&#x27;minutes&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;method&#x27;</span> <span class="keyword">in</span> reminder:</span><br><span class="line">        event_request_event_reminder.method = reminder.get(<span class="string">&#x27;method&#x27;</span>)</span><br></pre></td></tr></table></figure><p>构造的原始数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">event_data = <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;event&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;locations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">360</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">360</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;attendees&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;originalTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;attendeeCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;isOrganizer&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;isOptional&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;inviterCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;avatarKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx-dfxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;tenantId&quot;</span><span class="punctuation">:</span> meeting.get(&#x27;tenantId&#x27;)</span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;originalTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> meeting.get(&#x27;name&#x27;)<span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;attendeeCalendarId&quot;</span><span class="punctuation">:</span> meeting.get(&#x27;calendarId&#x27;)<span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;isOrganizer&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;isOptional&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;inviterCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;avatarKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;tenantId&quot;</span><span class="punctuation">:</span> meeting.get(&#x27;tenantId&#x27;)<span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;isDisabled&quot;</span><span class="punctuation">:</span> False</span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;reminders&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;calendarEventId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;minutes&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;attachments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> utils.generate_key()<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;originalTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;calendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;organizerCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;creatorCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;successorCalendarId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;originalEventKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;originalIsAllDay&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isFree&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isAllDay&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isCrossTenant&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;visibility&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rrule&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;guestCanInvite&quot;</span><span class="punctuation">:</span> True<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;guestCanSeeOtherGuests&quot;</span><span class="punctuation">:</span> True<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;guestCanModify&quot;</span><span class="punctuation">:</span> False<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;selfAttendeeStatus&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;startTime&quot;</span><span class="punctuation">:</span> startTime<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;startTimezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;endTime&quot;</span><span class="punctuation">:</span> endTime<span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;endTimezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;summary&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;docsDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>关于key的生成：</strong></p><p>key是服务端用于标识请求数据包的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;key&quot;: utils.generate_key()</span><br></pre></td></tr></table></figure><p>key的生成在PN()函数的hN()函数中：</p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206161546119.png"></p><p><img src="/2024/01/31/%E6%9F%90%E4%B9%A6%E4%BC%9A%E8%AE%AE%E5%AE%A4%E9%A2%84%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-protobuf/image-20240206161627707.png"></p><p>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">xk4V</span>: <span class="keyword">function</span>(<span class="params">t, e, r</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="title function_">r</span>(<span class="string">&quot;4fRq&quot;</span>)</span><br><span class="line">      , i = <span class="title function_">r</span>(<span class="string">&quot;I2ZF&quot;</span>);</span><br><span class="line">    t.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">t, e, r</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> o = e &amp;&amp; r || <span class="number">0</span>;</span><br><span class="line">        <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; (e = <span class="string">&quot;binary&quot;</span> === t ? <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">16</span>) : <span class="literal">null</span>,</span><br><span class="line">        t = <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">var</span> s = (t = t || &#123;&#125;).<span class="property">random</span> || (t.<span class="property">rng</span> || n)();</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">6</span>] = <span class="number">15</span> &amp; s[<span class="number">6</span>] | <span class="number">64</span>,</span><br><span class="line">        s[<span class="number">8</span>] = <span class="number">63</span> &amp; s[<span class="number">8</span>] | <span class="number">128</span>,</span><br><span class="line">        e)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; a &lt; <span class="number">16</span>; ++a)</span><br><span class="line">                e[o + a] = s[a];</span><br><span class="line">        <span class="keyword">return</span> e || <span class="title function_">i</span>(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>其中n和i都是函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">I2ZF</span>: <span class="keyword">function</span>(<span class="params">t</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = [], r = <span class="number">0</span>; r &lt; <span class="number">256</span>; ++r)</span><br><span class="line">            e[r] = (r + <span class="number">256</span>).<span class="title function_">toString</span>(<span class="number">16</span>).<span class="title function_">substr</span>(<span class="number">1</span>);</span><br><span class="line">        t.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">t, r</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = r || <span class="number">0</span></span><br><span class="line">              , i = e;</span><br><span class="line">            <span class="keyword">return</span> [i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]], <span class="string">&quot;-&quot;</span>, i[t[n++]], i[t[n++]], <span class="string">&quot;-&quot;</span>, i[t[n++]], i[t[n++]], <span class="string">&quot;-&quot;</span>, i[t[n++]], i[t[n++]], <span class="string">&quot;-&quot;</span>, i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]]].<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="string">&quot;4fRq&quot;</span>: <span class="keyword">function</span>(<span class="params">t</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> crypto &amp;&amp; crypto.<span class="property">getRandomValues</span> &amp;&amp; crypto.<span class="property">getRandomValues</span>.<span class="title function_">bind</span>(crypto) || <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> msCrypto &amp;&amp; <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> <span class="variable language_">window</span>.<span class="property">msCrypto</span>.<span class="property">getRandomValues</span> &amp;&amp; msCrypto.<span class="property">getRandomValues</span>.<span class="title function_">bind</span>(msCrypto);</span><br><span class="line">        <span class="keyword">if</span> (e) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(<span class="number">16</span>);</span><br><span class="line">            t.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">e</span>(r),</span><br><span class="line">                r</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">16</span>);</span><br><span class="line">            t.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> t, e = <span class="number">0</span>; e &lt; <span class="number">16</span>; e++)</span><br><span class="line">                    <span class="number">0</span> == (<span class="number">3</span> &amp; e) &amp;&amp; (t = <span class="number">4294967296</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()),</span><br><span class="line">                    n[e] = t &gt;&gt;&gt; ((<span class="number">3</span> &amp; e) &lt;&lt; <span class="number">3</span>) &amp; <span class="number">255</span>;</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>转换成python代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_random_array</span>():</span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    n = [<span class="number">0</span>] * <span class="number">16</span>  <span class="comment"># 创建一个包含16个元素的数组，初始化为0</span></span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> e % <span class="number">4</span> == <span class="number">0</span>:  <span class="comment"># 检查索引是否是4的倍数（在JS中使用的是位操作，但在Python中可以直接用模运算）</span></span><br><span class="line">            t = <span class="built_in">int</span>(<span class="number">4294967296</span> * random.random())  <span class="comment"># 生成一个新的随机数，类似于JS中的Math.random()</span></span><br><span class="line">        n[e] = (t &gt;&gt; ((e &amp; <span class="number">3</span>) * <span class="number">8</span>)) &amp; <span class="number">255</span>  <span class="comment"># 右移t并截取最后8位</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_uuid_string</span>(<span class="params">byte_array, start_index=<span class="number">0</span></span>):</span><br><span class="line">    <span class="comment"># 初始化16进制数组</span></span><br><span class="line">    hex_array = []</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        hex_array.append(<span class="string">&quot;&#123;:02x&#125;&quot;</span>.<span class="built_in">format</span>(r))</span><br><span class="line"></span><br><span class="line">    n = start_index</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;-&#123;&#125;&#123;&#125;-&#123;&#125;&#123;&#125;-&#123;&#125;&#123;&#125;-&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">        hex_array[byte_array[n]], hex_array[byte_array[n+<span class="number">1</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">2</span>]], hex_array[byte_array[n+<span class="number">3</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">4</span>]], hex_array[byte_array[n+<span class="number">5</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">6</span>]], hex_array[byte_array[n+<span class="number">7</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">8</span>]], hex_array[byte_array[n+<span class="number">9</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">10</span>]], hex_array[byte_array[n+<span class="number">11</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">12</span>]], hex_array[byte_array[n+<span class="number">13</span>]],</span><br><span class="line">        hex_array[byte_array[n+<span class="number">14</span>]], hex_array[byte_array[n+<span class="number">15</span>]]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_key</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 生成随机数</span></span><br><span class="line">    s = generate_random_array()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置UUID的版本和变体</span></span><br><span class="line">    s[<span class="number">6</span>] = (s[<span class="number">6</span>] &amp; <span class="number">0x0f</span>) | <span class="number">0x40</span>  <span class="comment"># UUID version</span></span><br><span class="line">    s[<span class="number">8</span>] = (s[<span class="number">8</span>] &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>  <span class="comment"># UUID variant</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># # 返回格式化的UUID字符串</span></span><br><span class="line">    <span class="keyword">return</span> generate_uuid_string(s)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>关于protobuf协议的分析还是有很多坑点，需要注意。在js代码的分析过程中遇到不懂的可以对应chatGPT，能减少搜索资料和代码逆向的时间。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://protobuf.dev/">https://protobuf.dev/</a></p><p><a href="https://cloud.tencent.com/developer/article/1925228">Python 爬虫进阶必备 | 由某知识平台延伸的 Protobuf 协议分析学习</a></p>]]></content>
      
      
      <categories>
          
          <category> js逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
            <tag> protobuf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机APP抓取HTTPS流量</title>
      <link href="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/"/>
      <url>/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>在智能汽车中，HU（车机 + 中控屏）选用的系统一般是 <a href="https://source.android.com/docs/automotive/start/what_automotive">Android Automotive</a>，也就是 Android，所以抓取手机App HTTP&#x2F;HTTPS流量的方法在车机上基本同样适用。不过由于车机上的各种限制，会导致一些抓包方法无法适用。在抓包之前，需要将手机或者车机进行root，拿到root权限时候才能安装证书，抓取流量；手机root比较方便，车机root一般需要输入对应的debug版本的系统包，才能获取root权限。</p><h2 id="Burpsuite-抓包"><a href="#Burpsuite-抓包" class="headerlink" title="Burpsuite 抓包"></a>Burpsuite 抓包</h2><blockquote><p>环境：Android 9（已root）&#x2F;车机 Android 11（已root）</p></blockquote><p>使用 Burpsuite 抓取 Android app 的 HTTP&#x2F;HTTPS 流量比较方便，首先介绍此方法，具体步骤如下。</p><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p>首先将测试手机和电脑连接到同一个WIFI，其中电脑IP：192.168.113.98&#x2F;24，手机IP：192.168.113.161&#x2F;24。手机和电脑能相互通信：</p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218143054868.png" style="zoom:200%;"><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218143351389.png" alt="image-20231218143351389" style="zoom:200%;"><p>打开Burpsuite，设置监听为电脑IP+端口（192.168.113.98:9999）：</p><p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218143835104.png" alt="image-20231218143835104"></p><p>设置手机WIFI网络使用电脑192.168.113.98:9999代理，手机app的所有流量都走192.168.113.98:9999。流量走向为：APP&#x3D;&gt;wlan0(192.168.113.161)&#x3D;&gt;192.168.113.98:9999&#x3D;&gt;Burpsuite&#x3D;&gt;电脑&#x3D;&gt;外网：</p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218144524842.png" alt="image-20231218144524842" style="zoom: 50%;"><h3 id="导入Burpsuite证书"><a href="#导入Burpsuite证书" class="headerlink" title="导入Burpsuite证书"></a>导入Burpsuite证书</h3><p>抓包之前需要将Burpsuite的证书导入到手机中。在手机浏览器中输入 <a href="http://burp/">http://burp</a> 即可下载CA证书，保存在SD卡中后可以在手机中选择安装：</p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218145152130.png" alt="image-20231218145152130" style="zoom:50%;"><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218145213665.png" alt="image-20231218145213665" style="zoom:50%;"><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218145230906.png" alt="image-20231218145230906" style="zoom:50%;"><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218145242738.png" alt="image-20231218145242738" style="zoom:50%;"><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218145308333.png" alt="image-20231218145308333" style="zoom:50%;"><p>但是在最后安装证书的时候证书无法安装，导入时是灰色，不可选。在Android 9中，安装证书的方式和低版本有区别，不能直接安装，需要修改证书格式，并手动放置到证书目录中。参考：<a href="https://www.sunofbeach.net/a/1597821136537837569">AOSP Android10导入BurpSuite CA证书抓包</a></p><p>在Burpsuite中导出证书，如果前面的步骤中手机没有浏览器，可以直接在Burpsuite中导出证书，然后adb push到手机上。</p><p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218145736678.png"></p><p>修改证书格式，并adb push到手机系统证书安装目录（&#x2F;system&#x2F;etc&#x2F;security&#x2F;cacerts）（openssl可以使用windows子系统wsl中的命令）：</p><p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218151400688.png"></p><p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218152211955.png"></p><p>其中向&#x2F;system&#x2F;etc&#x2F;security&#x2F;cacerts写入文件时需要先执行 adb root &amp; adb remount ，因为&#x2F;system&#x2F;etc&#x2F;security&#x2F;cacerts默认是只读的。如果执行有问题，可以参考笔者博客的《杂记》部分。</p><h3 id="开始抓包"><a href="#开始抓包" class="headerlink" title="开始抓包"></a>开始抓包</h3><p>配置代理并导入证书之后，即可在Burpsuite中抓取到app https流量：</p><p><img src="/2023/12/12/%E6%89%8B%E6%9C%BA-%E8%BD%A6%E6%9C%BA-APP-%E6%8A%93%E5%8F%96-HTTPS-%E6%B5%81%E9%87%8F/image-20231218153344704.png" alt="image-20231218153344704"></p><p><strong>注：</strong></p><p>在车机中，一般连接WIFI、导入证书和设置代理是不允许的，需要使用命令连接WIFI，设置代理以及导入证书，其他主要的步骤和手机相同。</p><h2 id="Tcpdump-Wireshark-Android-9-root-车机-root"><a href="#Tcpdump-Wireshark-Android-9-root-车机-root" class="headerlink" title="Tcpdump + Wireshark + Android 9(root)&#x2F;车机(root)"></a>Tcpdump + Wireshark + Android 9(root)&#x2F;车机(root)</h2><h2 id="Frida-Hook-抓包"><a href="#Frida-Hook-抓包" class="headerlink" title="Frida Hook 抓包"></a>Frida Hook 抓包</h2>]]></content>
      
      
      <categories>
          
          <category> 抓包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 抓包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Cactus主题实现支持Waline评论系统</title>
      <link href="/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Cactus 主题暂未集成对 Waline 的支持：<a href="https://github.com/probberechts/hexo-theme-cactus/issues/343">https://github.com/probberechts/hexo-theme-cactus/issues/343</a> ，Cactus 作者提示可以自己实现，将 Waline 评论系统集成到 Cactus 主题中，参考：<a href="https://github.com/probberechts/hexo-theme-cactus/pull/54/commits">https://github.com/probberechts/hexo-theme-cactus/pull/54/commits</a> 。 </p></blockquote><p>实现 Waline 评论支持需要修改如下文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">themes\cactus\layout\_partial\comments.ejs</span><br><span class="line">themes\cactus\layout\_partial\head.ejs</span><br><span class="line">themes\cactus\layout\_partial\scripts.ejs</span><br></pre></td></tr></table></figure><h2 id="支持-Waline"><a href="#支持-Waline" class="headerlink" title="支持 Waline"></a>支持 Waline</h2><p>在 Cactus 主题中，可以通过 themes\cactus\_config.yml 开启并配置 Waline：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># themes\cactus\_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 是否开启</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">&#x27;https://xxx.vercel.app&#x27;</span> <span class="comment"># Waline Vercel服务端地址，替换为自己的服务端地址</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># 头像风格</span></span><br><span class="line">  <span class="attr">meta:</span> [<span class="string">nick</span>, <span class="string">mail</span>] <span class="comment"># 自定义评论框上面的三个输入框的内容</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># 评论数量多少时显示分页</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span> <span class="comment"># 语言, 可选值: en, zh-CN</span></span><br><span class="line">  <span class="comment"># Warning: 不要同时启用 `waline.visitor` 以及 `leancloud_visitors`.</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># 文章阅读统计</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># 如果为 false , 评论数量只会在当前评论页面显示, 主页则不显示</span></span><br><span class="line">  <span class="attr">requiredFields:</span> [<span class="string">nick</span>, <span class="string">mail</span>] <span class="comment"># 设置用户评论时必填的信息，[nick,mail]: [nick] | [nick, mail]</span></span><br><span class="line">  <span class="attr">emoji:</span> <span class="string">//unpkg.com/@waline/emojis@1.2.0/qq</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>配置文件的属性可以参考：<a href="https://waline.js.org/reference/client/props.html">https://waline.js.org/reference/client/props.html</a></p><p>接下来修改 themes\cactus\layout_partial\comments.ejs 支持 Waline：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- themes\cactus\layout\_partial\comments.ejs --&gt;</span><br><span class="line"></span><br><span class="line">&lt;% if(page.comments &amp;&amp; theme.disqus.enabled)&#123; %&gt;</span><br><span class="line">    &lt;div class=&quot;blog-post-comments&quot;&gt;</span><br><span class="line">        &lt;div id=&quot;disqus_thread&quot;&gt;</span><br><span class="line">            &lt;noscript&gt;&lt;%= __(&#x27;comments.no_js&#x27;) %&gt;&lt;/noscript&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;% if(page.comments &amp;&amp; theme.utterances.enabled)&#123; %&gt;</span><br><span class="line">    &lt;div class=&quot;blog-post-comments&quot;&gt;</span><br><span class="line">        &lt;div id=&quot;utterances_thread&quot;&gt;</span><br><span class="line">            &lt;noscript&gt;&lt;%= __(&#x27;comments.no_js&#x27;) %&gt;&lt;/noscript&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;% if(page.comments &amp;&amp; theme.waline &amp;&amp; theme.waline.enabled)&#123; %&gt;</span><br><span class="line">    &lt;div class=&quot;blog-post-comments&quot;&gt;</span><br><span class="line">        &lt;div id=&quot;waline_thread&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/image-20231009095927447.png"></p><p>page.comments 表示当前页面是否支持评论，在文章前面设置，Cactus 主题默认在文章中开启，在其他页面中关闭；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: Tags and Categories</span><br><span class="line">date: 2017-12-24 23:29:53</span><br><span class="line">tags:</span><br><span class="line">- Foo</span><br><span class="line">- Bar</span><br><span class="line">categories: </span><br><span class="line">- Baz</span><br><span class="line">comments: true</span><br></pre></td></tr></table></figure><p>theme.waline.enabled 表示 Waline 评论是否启用。如果页面支持评论并且启用 Waline 评论系统，那么就向网页中插入如下 html 代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blog-post-comments&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;waline_thread&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 waline_thread 在后续初始化 Waline 时会用到。</p><h2 id="引入-Waline"><a href="#引入-Waline" class="headerlink" title="引入 Waline"></a>引入 Waline</h2><p>首先需要在 Cactus 主题的代码中引入 Waline，参考：<a href="https://waline.js.org/guide/get-started/#html-%E5%BC%95%E5%85%A5-%E5%AE%A2%E6%88%B7%E7%AB%AF">https://waline.js.org/guide/get-started/#html-%E5%BC%95%E5%85%A5-%E5%AE%A2%E6%88%B7%E7%AB%AF</a> 。主要是从外部引入 waline.css 和 waline.mjs 这两个文件。</p><p><strong>引入 waline.css</strong></p><p>在 themes\cactus\layout_partial\head.ejs 文件中引入 waline.css，head.ejs 可以向网页 html 的 &lt;head&gt; 元素中注入代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- themes\cactus\layout\_partial\head<span class="selector-class">.ejs</span> --&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line"></span><br><span class="line">    ···</span><br><span class="line">    </span><br><span class="line">  &lt;!-- Waline Comments --&gt;</span><br><span class="line">  &lt;% if (theme<span class="selector-class">.waline</span><span class="selector-class">.enabled</span>)&#123; %&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/@waline/client@v2/dist/waline.css<span class="string">&quot;/&gt;</span></span><br><span class="line"><span class="string">  &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/image-20231009101549242.png"></p><p>通过 &lt;link&gt;元素从外部引入 waline.css 。</p><p><strong>引入 waline.mjs</strong></p><p>在 themes\cactus\layout_partial\scripts.ejs 文件中引入 waline.mjs，scripts.ejs 可以向网页中注入javascript代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- themes\cactus\layout\_partial\scripts.ejs --&gt;</span><br><span class="line"></span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">&lt;!-- Waline Comments --&gt;</span><br><span class="line">&lt;% if (theme.waline.enabled)&#123; %&gt;</span><br><span class="line">  &lt;script type=&quot;module&quot;&gt;</span><br><span class="line">    import &#123; init &#125; from &#x27;https://unpkg.com/@waline/client@v2/dist/waline.mjs&#x27;;</span><br><span class="line"></span><br><span class="line">    var EMOJI = [&#x27;//unpkg.com/@waline/emojis@1.2.0/weibo&#x27;]</span><br><span class="line">    var META = [&#x27;nick&#x27;, &#x27;mail&#x27;, &#x27;link&#x27;];</span><br><span class="line">    var REQUIREDFIELDS = [&#x27;nick&#x27;, &#x27;mail&#x27;, &#x27;link&#x27;];</span><br><span class="line"></span><br><span class="line">    var emoji = &#x27;&lt;%= theme.waline.emoji %&gt;&#x27;.split(&#x27;,&#x27;).filter(function(item)&#123;</span><br><span class="line">      return item !== &#x27;&#x27;; // filter()返回满足不为空item</span><br><span class="line">    &#125;);</span><br><span class="line">    emoji = emoji.length == 0 ? EMOJI : emoji;</span><br><span class="line"></span><br><span class="line">    var meta = &#x27;&lt;%= theme.waline.meta %&gt;&#x27;.split(&#x27;,&#x27;).filter(function(item)&#123;</span><br><span class="line">      return META.indexOf(item) &gt; -1; // filter()返回满足META.indexOf(item) &gt; -1为true的item</span><br><span class="line">    &#125;);</span><br><span class="line">    meta = meta.length == 0 ? META : meta;</span><br><span class="line"></span><br><span class="line">    var requiredFields = &#x27;&lt;%= theme.waline.requiredFields %&gt;&#x27;.split(&#x27;,&#x27;).filter(function(item)&#123;</span><br><span class="line">      return REQUIREDFIELDS.indexOf(item) &gt; -1; // filter()返回满足META.indexOf(item) &gt; -1为true的item</span><br><span class="line">    &#125;);</span><br><span class="line">    requiredFields = requiredFields.length == 0 ? REQUIREDFIELDS : requiredFields;</span><br><span class="line"></span><br><span class="line">    init(&#123;</span><br><span class="line">      el: &#x27;#waline_thread&#x27;,</span><br><span class="line">      serverURL: &#x27;&lt;%= theme.waline.serverURL %&gt;&#x27;, // Waline 的服务端地址</span><br><span class="line">      path: &#x27;&lt;%= theme.waline.path %&gt;&#x27; == &#x27;&#x27; ? window.location.pathname : &#x27;&lt;%= theme.waline.path %&gt;&#x27;, // 当前文章页路径，用于区分不同的文章页，以保证正确读取该文章页下的评论列表</span><br><span class="line">      lang: &#x27;&lt;%= theme.waline.lang %&gt;&#x27; == &#x27;&#x27; ? &#x27;zh-CN&#x27; : &#x27;&lt;%= theme.waline.lang %&gt;&#x27;, // 多语言支持，未设置默认英文</span><br><span class="line">      emoji: emoji,</span><br><span class="line">      dark: &#x27;&lt;%= theme.waline.dark %&gt;&#x27;, // 暗黑模式适配</span><br><span class="line">      commentSorting: &#x27;&lt;%= theme.waline.commentSorting %&gt;&#x27; == &#x27;&#x27; ? &#x27;latest&#x27; : &#x27;&lt;%= theme.waline.commentSorting %&gt;&#x27;, // 评论列表排序方式</span><br><span class="line">      meta: meta, // 评论者相关属性</span><br><span class="line">      requiredFields: requiredFields, // 设置必填项，默认匿名</span><br><span class="line">      login: &#x27;&lt;%= theme.waline.login %&gt;&#x27;, // 登录模式状态</span><br><span class="line">      wordLimit: &#x27;&lt;%= theme.waline.wordLimit %&gt;&#x27;, // 评论字数限制</span><br><span class="line">      pageSize: &#x27;&lt;%= theme.waline.pageSize %&gt;&#x27; == &#x27;&#x27; ? 10 : &#x27;&lt;%= theme.waline.pageSize %&gt;&#x27;, // 评论列表分页，每页条数</span><br><span class="line">      imageUploader: &#x27;&lt;%= theme.waline.imageUploader %&gt;&#x27;, // 自定义图片上传方法</span><br><span class="line">      highlighter: &#x27;&lt;%= theme.waline.highlighter %&gt;&#x27;, // 代码高亮</span><br><span class="line">      placeholder: &#x27;&lt;%= theme.waline.placeholder %&gt;&#x27;,</span><br><span class="line">      avatar: &#x27;&lt;%= theme.waline.avatar %&gt;&#x27;,</span><br><span class="line">      visitor: &#x27;&lt;%= theme.waline.visitor %&gt;&#x27;,</span><br><span class="line">      comment_count: &#x27;&lt;%= theme.waline.comment_count %&gt;&#x27;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/image-20231009140108177.png"></p><p>通过 import 从外部引入 waline.mjs 的 init 函数，并使用 init 从主题配置文件中获取配置用于初始化 Waline。初始化配置参考：<a href="https://waline.js.org/reference/client/props.html">https://waline.js.org/reference/client/props.html</a> 。上述代码中的 el: ‘#waline_thread’ 就是之前在 comments.ejs 文件中设置的 &lt;div&gt; 元素的 id。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上述文件都修改完成之后就可以重新 hexo g 生成静态网页，并执行 hexo s 本地查看。效果如下：</p><p><img src="/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/image-20231009113252832.png" alt="image-20231009113252832"></p><p><strong>注意：</strong>如果代码出现 bug 或者配置不正确，都会导致 Waline 不显示，并且 hexo 不一定会报错，需要仔细检查并手动调试排错。</p><h2 id="未解决的问题"><a href="#未解决的问题" class="headerlink" title="未解决的问题"></a>未解决的问题</h2><p>Cactus 主题支持多种配色，主要分为黑白两种模式。Waline 主题也支持黑白两种配色，通过在配置文件中设置 dark: true 来跟随主题颜色改变评论系统的配色，其主要的实现方法是在 html 中注入 style 元素动态修改评论系统的 css 属性，其中 true 就是配置文件中的 dark 属性的值：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">id</span>=<span class="string">&quot;waline-darkmode&quot;</span>&gt;</span><span class="language-css">true&#123;<span class="attr">--waline-white</span>:<span class="number">#000</span>;<span class="attr">--waline-light-grey</span>:<span class="number">#666</span>;<span class="attr">--waline-dark-grey</span>:<span class="number">#999</span>;<span class="attr">--waline-color</span>:<span class="number">#888</span>;<span class="attr">--waline-bgcolor</span>:<span class="number">#1e1e1e</span>;<span class="attr">--waline-bgcolor-light</span>:<span class="number">#272727</span>;<span class="attr">--waline-bgcolor-hover</span>: <span class="number">#444</span>;<span class="attr">--waline-border-color</span>:<span class="number">#333</span>;<span class="attr">--waline-disable-bgcolor</span>:<span class="number">#444</span>;<span class="attr">--waline-disable-color</span>:<span class="number">#272727</span>;<span class="attr">--waline-bq-color</span>:<span class="number">#272727</span>;<span class="attr">--waline-info-bgcolor</span>:<span class="number">#272727</span>;<span class="attr">--waline-info-color</span>:<span class="number">#666</span>&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是设置 dark: true 之后，如上代码不能使评论的颜色随主题切换，暂未解决。</p><p>Waline 默认使用白色配置，如果使用 Cactus 主题的 dark 模式，可以修改 themes\cactus\source\css_partial\comments.styl 文件，强制将 Waline 的背景颜色修改为黑色：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blog-post-comments</span></span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">4rem</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="comment">/* 常规颜色 */</span></span><br><span class="line">  <span class="attr">--waline-white</span>: <span class="number">#000</span> !important;</span><br><span class="line">  <span class="attr">--waline-light-grey</span>: <span class="number">#666</span> !important;</span><br><span class="line">  <span class="attr">--waline-dark-grey</span>: <span class="number">#999</span> !important;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 布局颜色 */</span></span><br><span class="line">  <span class="attr">--waline-color</span>: <span class="number">#888</span> !important;</span><br><span class="line">  <span class="attr">--waline-bgcolor</span>: <span class="number">#1e1e1e</span> !important;</span><br><span class="line">  <span class="attr">--waline-bgcolor-light</span>: <span class="number">#272727</span> !important;</span><br><span class="line">  <span class="attr">--waline-border-color</span>: <span class="number">#333</span> !important;</span><br><span class="line">  <span class="attr">--waline-disable-bgcolor</span>: <span class="number">#444</span> !important;</span><br><span class="line">  <span class="attr">--waline-disable-color</span>: <span class="number">#272727</span> !important;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 特殊颜色 */</span></span><br><span class="line">  <span class="attr">--waline-bq-color</span>: <span class="number">#272727</span> !important;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 其他颜色 */</span></span><br><span class="line">  <span class="attr">--waline-info-bgcolor</span>: <span class="number">#272727</span> !important;</span><br><span class="line">  <span class="attr">--waline-info-color</span>: <span class="number">#666</span> !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义样式参考：<a href="https://waline.js.org/reference/client/style.html">https://waline.js.org/reference/client/style.html</a> 。修改完效果如下：</p><p><img src="/2023/10/08/Hexo-Cactus-%E4%B8%BB%E9%A2%98%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-Waline-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/image-20231009113029346.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Cactus </tag>
            
            <tag> Waline </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
